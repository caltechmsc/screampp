# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.40
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.
# This file is compatible with both classic and new-style classes.

from sys import version_info
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_py_scream_ee', [dirname(__file__)])
        except ImportError:
            import _py_scream_ee
            return _py_scream_ee
        if fp is not None:
            try:
                _mod = imp.load_module('_py_scream_ee', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _py_scream_ee = swig_import_helper()
    del swig_import_helper
else:
    import _py_scream_ee
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


class SwigPyIterator(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, SwigPyIterator, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, SwigPyIterator, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _py_scream_ee.delete_SwigPyIterator
    __del__ = lambda self : None;
    def value(self): return _py_scream_ee.SwigPyIterator_value(self)
    def incr(self, n = 1): return _py_scream_ee.SwigPyIterator_incr(self, n)
    def decr(self, n = 1): return _py_scream_ee.SwigPyIterator_decr(self, n)
    def distance(self, *args): return _py_scream_ee.SwigPyIterator_distance(self, *args)
    def equal(self, *args): return _py_scream_ee.SwigPyIterator_equal(self, *args)
    def copy(self): return _py_scream_ee.SwigPyIterator_copy(self)
    def next(self): return _py_scream_ee.SwigPyIterator_next(self)
    def __next__(self): return _py_scream_ee.SwigPyIterator___next__(self)
    def previous(self): return _py_scream_ee.SwigPyIterator_previous(self)
    def advance(self, *args): return _py_scream_ee.SwigPyIterator_advance(self, *args)
    def __eq__(self, *args): return _py_scream_ee.SwigPyIterator___eq__(self, *args)
    def __ne__(self, *args): return _py_scream_ee.SwigPyIterator___ne__(self, *args)
    def __iadd__(self, *args): return _py_scream_ee.SwigPyIterator___iadd__(self, *args)
    def __isub__(self, *args): return _py_scream_ee.SwigPyIterator___isub__(self, *args)
    def __add__(self, *args): return _py_scream_ee.SwigPyIterator___add__(self, *args)
    def __sub__(self, *args): return _py_scream_ee.SwigPyIterator___sub__(self, *args)
    def __iter__(self): return self
SwigPyIterator_swigregister = _py_scream_ee.SwigPyIterator_swigregister
SwigPyIterator_swigregister(SwigPyIterator)

class ScreamModel(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ScreamModel, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ScreamModel, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _py_scream_ee.new_ScreamModel(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _py_scream_ee.delete_ScreamModel
    __del__ = lambda self : None;
    __swig_setmethods__["scream_parameters"] = _py_scream_ee.ScreamModel_scream_parameters_set
    __swig_getmethods__["scream_parameters"] = _py_scream_ee.ScreamModel_scream_parameters_get
    if _newclass:scream_parameters = _swig_property(_py_scream_ee.ScreamModel_scream_parameters_get, _py_scream_ee.ScreamModel_scream_parameters_set)
    __swig_setmethods__["HANDLER"] = _py_scream_ee.ScreamModel_HANDLER_set
    __swig_getmethods__["HANDLER"] = _py_scream_ee.ScreamModel_HANDLER_get
    if _newclass:HANDLER = _swig_property(_py_scream_ee.ScreamModel_HANDLER_get, _py_scream_ee.ScreamModel_HANDLER_set)
    __swig_setmethods__["ptn"] = _py_scream_ee.ScreamModel_ptn_set
    __swig_getmethods__["ptn"] = _py_scream_ee.ScreamModel_ptn_get
    if _newclass:ptn = _swig_property(_py_scream_ee.ScreamModel_ptn_get, _py_scream_ee.ScreamModel_ptn_set)
    __swig_setmethods__["scream_EE"] = _py_scream_ee.ScreamModel_scream_EE_set
    __swig_getmethods__["scream_EE"] = _py_scream_ee.ScreamModel_scream_EE_get
    if _newclass:scream_EE = _swig_property(_py_scream_ee.ScreamModel_scream_EE_get, _py_scream_ee.ScreamModel_scream_EE_set)
    def new_ScreamEE(self): return _py_scream_ee.ScreamModel_new_ScreamEE(self)
    def new_Rotlib(self): return _py_scream_ee.ScreamModel_new_Rotlib(self)
    __swig_setmethods__["scream_EE_list"] = _py_scream_ee.ScreamModel_scream_EE_list_set
    __swig_getmethods__["scream_EE_list"] = _py_scream_ee.ScreamModel_scream_EE_list_get
    if _newclass:scream_EE_list = _swig_property(_py_scream_ee.ScreamModel_scream_EE_list_get, _py_scream_ee.ScreamModel_scream_EE_list_set)
    __swig_setmethods__["rotlib_list"] = _py_scream_ee.ScreamModel_rotlib_list_set
    __swig_getmethods__["rotlib_list"] = _py_scream_ee.ScreamModel_rotlib_list_get
    if _newclass:rotlib_list = _swig_property(_py_scream_ee.ScreamModel_rotlib_list_get, _py_scream_ee.ScreamModel_rotlib_list_set)
ScreamModel_swigregister = _py_scream_ee.ScreamModel_swigregister
ScreamModel_swigregister(ScreamModel)

class ScreamParameters(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ScreamParameters, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ScreamParameters, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _py_scream_ee.new_ScreamParameters(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _py_scream_ee.delete_ScreamParameters
    __del__ = lambda self : None;
    __swig_setmethods__["InputFileName"] = _py_scream_ee.ScreamParameters_InputFileName_set
    __swig_getmethods__["InputFileName"] = _py_scream_ee.ScreamParameters_InputFileName_get
    if _newclass:InputFileName = _swig_property(_py_scream_ee.ScreamParameters_InputFileName_get, _py_scream_ee.ScreamParameters_InputFileName_set)
    __swig_setmethods__["MutateResidueInfo"] = _py_scream_ee.ScreamParameters_MutateResidueInfo_set
    __swig_getmethods__["MutateResidueInfo"] = _py_scream_ee.ScreamParameters_MutateResidueInfo_get
    if _newclass:MutateResidueInfo = _swig_property(_py_scream_ee.ScreamParameters_MutateResidueInfo_get, _py_scream_ee.ScreamParameters_MutateResidueInfo_set)
    __swig_setmethods__["AdditionalLibraryInfo"] = _py_scream_ee.ScreamParameters_AdditionalLibraryInfo_set
    __swig_getmethods__["AdditionalLibraryInfo"] = _py_scream_ee.ScreamParameters_AdditionalLibraryInfo_get
    if _newclass:AdditionalLibraryInfo = _swig_property(_py_scream_ee.ScreamParameters_AdditionalLibraryInfo_get, _py_scream_ee.ScreamParameters_AdditionalLibraryInfo_set)
    __swig_setmethods__["Library"] = _py_scream_ee.ScreamParameters_Library_set
    __swig_getmethods__["Library"] = _py_scream_ee.ScreamParameters_Library_get
    if _newclass:Library = _swig_property(_py_scream_ee.ScreamParameters_Library_get, _py_scream_ee.ScreamParameters_Library_set)
    __swig_setmethods__["PlacementMethod"] = _py_scream_ee.ScreamParameters_PlacementMethod_set
    __swig_getmethods__["PlacementMethod"] = _py_scream_ee.ScreamParameters_PlacementMethod_get
    if _newclass:PlacementMethod = _swig_property(_py_scream_ee.ScreamParameters_PlacementMethod_get, _py_scream_ee.ScreamParameters_PlacementMethod_set)
    __swig_setmethods__["CreateCBParameters"] = _py_scream_ee.ScreamParameters_CreateCBParameters_set
    __swig_getmethods__["CreateCBParameters"] = _py_scream_ee.ScreamParameters_CreateCBParameters_get
    if _newclass:CreateCBParameters = _swig_property(_py_scream_ee.ScreamParameters_CreateCBParameters_get, _py_scream_ee.ScreamParameters_CreateCBParameters_set)
    __swig_setmethods__["KeepOriginalRotamer"] = _py_scream_ee.ScreamParameters_KeepOriginalRotamer_set
    __swig_getmethods__["KeepOriginalRotamer"] = _py_scream_ee.ScreamParameters_KeepOriginalRotamer_get
    if _newclass:KeepOriginalRotamer = _swig_property(_py_scream_ee.ScreamParameters_KeepOriginalRotamer_get, _py_scream_ee.ScreamParameters_KeepOriginalRotamer_set)
    __swig_setmethods__["UseScreamEnergyFunction"] = _py_scream_ee.ScreamParameters_UseScreamEnergyFunction_set
    __swig_getmethods__["UseScreamEnergyFunction"] = _py_scream_ee.ScreamParameters_UseScreamEnergyFunction_get
    if _newclass:UseScreamEnergyFunction = _swig_property(_py_scream_ee.ScreamParameters_UseScreamEnergyFunction_get, _py_scream_ee.ScreamParameters_UseScreamEnergyFunction_set)
    __swig_setmethods__["UseDeltaMethod"] = _py_scream_ee.ScreamParameters_UseDeltaMethod_set
    __swig_getmethods__["UseDeltaMethod"] = _py_scream_ee.ScreamParameters_UseDeltaMethod_get
    if _newclass:UseDeltaMethod = _swig_property(_py_scream_ee.ScreamParameters_UseDeltaMethod_get, _py_scream_ee.ScreamParameters_UseDeltaMethod_set)
    __swig_setmethods__["UseRotamerNeighborList"] = _py_scream_ee.ScreamParameters_UseRotamerNeighborList_set
    __swig_getmethods__["UseRotamerNeighborList"] = _py_scream_ee.ScreamParameters_UseRotamerNeighborList_get
    if _newclass:UseRotamerNeighborList = _swig_property(_py_scream_ee.ScreamParameters_UseRotamerNeighborList_get, _py_scream_ee.ScreamParameters_UseRotamerNeighborList_set)
    __swig_setmethods__["UseAsymmetricDelta"] = _py_scream_ee.ScreamParameters_UseAsymmetricDelta_set
    __swig_getmethods__["UseAsymmetricDelta"] = _py_scream_ee.ScreamParameters_UseAsymmetricDelta_get
    if _newclass:UseAsymmetricDelta = _swig_property(_py_scream_ee.ScreamParameters_UseAsymmetricDelta_get, _py_scream_ee.ScreamParameters_UseAsymmetricDelta_set)
    __swig_setmethods__["UseDeltaForInterResiE"] = _py_scream_ee.ScreamParameters_UseDeltaForInterResiE_set
    __swig_getmethods__["UseDeltaForInterResiE"] = _py_scream_ee.ScreamParameters_UseDeltaForInterResiE_get
    if _newclass:UseDeltaForInterResiE = _swig_property(_py_scream_ee.ScreamParameters_UseDeltaForInterResiE_get, _py_scream_ee.ScreamParameters_UseDeltaForInterResiE_set)
    __swig_setmethods__["FlatDeltaValue"] = _py_scream_ee.ScreamParameters_FlatDeltaValue_set
    __swig_getmethods__["FlatDeltaValue"] = _py_scream_ee.ScreamParameters_FlatDeltaValue_get
    if _newclass:FlatDeltaValue = _swig_property(_py_scream_ee.ScreamParameters_FlatDeltaValue_get, _py_scream_ee.ScreamParameters_FlatDeltaValue_set)
    __swig_setmethods__["DeltaStandardDevs"] = _py_scream_ee.ScreamParameters_DeltaStandardDevs_set
    __swig_getmethods__["DeltaStandardDevs"] = _py_scream_ee.ScreamParameters_DeltaStandardDevs_get
    if _newclass:DeltaStandardDevs = _swig_property(_py_scream_ee.ScreamParameters_DeltaStandardDevs_get, _py_scream_ee.ScreamParameters_DeltaStandardDevs_set)
    __swig_setmethods__["InnerWallScalingFactor"] = _py_scream_ee.ScreamParameters_InnerWallScalingFactor_set
    __swig_getmethods__["InnerWallScalingFactor"] = _py_scream_ee.ScreamParameters_InnerWallScalingFactor_get
    if _newclass:InnerWallScalingFactor = _swig_property(_py_scream_ee.ScreamParameters_InnerWallScalingFactor_get, _py_scream_ee.ScreamParameters_InnerWallScalingFactor_set)
    __swig_setmethods__["NonPolarHCalc"] = _py_scream_ee.ScreamParameters_NonPolarHCalc_set
    __swig_getmethods__["NonPolarHCalc"] = _py_scream_ee.ScreamParameters_NonPolarHCalc_get
    if _newclass:NonPolarHCalc = _swig_property(_py_scream_ee.ScreamParameters_NonPolarHCalc_get, _py_scream_ee.ScreamParameters_NonPolarHCalc_set)
    __swig_setmethods__["ScoringFunction"] = _py_scream_ee.ScreamParameters_ScoringFunction_set
    __swig_getmethods__["ScoringFunction"] = _py_scream_ee.ScreamParameters_ScoringFunction_get
    if _newclass:ScoringFunction = _swig_property(_py_scream_ee.ScreamParameters_ScoringFunction_get, _py_scream_ee.ScreamParameters_ScoringFunction_set)
    __swig_setmethods__["MultiplePlacementMethod"] = _py_scream_ee.ScreamParameters_MultiplePlacementMethod_set
    __swig_getmethods__["MultiplePlacementMethod"] = _py_scream_ee.ScreamParameters_MultiplePlacementMethod_get
    if _newclass:MultiplePlacementMethod = _swig_property(_py_scream_ee.ScreamParameters_MultiplePlacementMethod_get, _py_scream_ee.ScreamParameters_MultiplePlacementMethod_set)
    __swig_setmethods__["CBGroundSpectrumCalc"] = _py_scream_ee.ScreamParameters_CBGroundSpectrumCalc_set
    __swig_getmethods__["CBGroundSpectrumCalc"] = _py_scream_ee.ScreamParameters_CBGroundSpectrumCalc_get
    if _newclass:CBGroundSpectrumCalc = _swig_property(_py_scream_ee.ScreamParameters_CBGroundSpectrumCalc_get, _py_scream_ee.ScreamParameters_CBGroundSpectrumCalc_set)
    __swig_setmethods__["OneEnergyFFParFile"] = _py_scream_ee.ScreamParameters_OneEnergyFFParFile_set
    __swig_getmethods__["OneEnergyFFParFile"] = _py_scream_ee.ScreamParameters_OneEnergyFFParFile_get
    if _newclass:OneEnergyFFParFile = _swig_property(_py_scream_ee.ScreamParameters_OneEnergyFFParFile_get, _py_scream_ee.ScreamParameters_OneEnergyFFParFile_set)
    __swig_setmethods__["DeltaParFile"] = _py_scream_ee.ScreamParameters_DeltaParFile_set
    __swig_getmethods__["DeltaParFile"] = _py_scream_ee.ScreamParameters_DeltaParFile_get
    if _newclass:DeltaParFile = _swig_property(_py_scream_ee.ScreamParameters_DeltaParFile_get, _py_scream_ee.ScreamParameters_DeltaParFile_set)
    __swig_setmethods__["EachAtomDeltaFile"] = _py_scream_ee.ScreamParameters_EachAtomDeltaFile_set
    __swig_getmethods__["EachAtomDeltaFile"] = _py_scream_ee.ScreamParameters_EachAtomDeltaFile_get
    if _newclass:EachAtomDeltaFile = _swig_property(_py_scream_ee.ScreamParameters_EachAtomDeltaFile_get, _py_scream_ee.ScreamParameters_EachAtomDeltaFile_set)
    __swig_setmethods__["PolarOptimizationExclusions"] = _py_scream_ee.ScreamParameters_PolarOptimizationExclusions_set
    __swig_getmethods__["PolarOptimizationExclusions"] = _py_scream_ee.ScreamParameters_PolarOptimizationExclusions_get
    if _newclass:PolarOptimizationExclusions = _swig_property(_py_scream_ee.ScreamParameters_PolarOptimizationExclusions_get, _py_scream_ee.ScreamParameters_PolarOptimizationExclusions_set)
    __swig_setmethods__["LJOption"] = _py_scream_ee.ScreamParameters_LJOption_set
    __swig_getmethods__["LJOption"] = _py_scream_ee.ScreamParameters_LJOption_get
    if _newclass:LJOption = _swig_property(_py_scream_ee.ScreamParameters_LJOption_get, _py_scream_ee.ScreamParameters_LJOption_set)
    __swig_setmethods__["CoulombMode"] = _py_scream_ee.ScreamParameters_CoulombMode_set
    __swig_getmethods__["CoulombMode"] = _py_scream_ee.ScreamParameters_CoulombMode_get
    if _newclass:CoulombMode = _swig_property(_py_scream_ee.ScreamParameters_CoulombMode_get, _py_scream_ee.ScreamParameters_CoulombMode_set)
    __swig_setmethods__["Dielectric"] = _py_scream_ee.ScreamParameters_Dielectric_set
    __swig_getmethods__["Dielectric"] = _py_scream_ee.ScreamParameters_Dielectric_get
    if _newclass:Dielectric = _swig_property(_py_scream_ee.ScreamParameters_Dielectric_get, _py_scream_ee.ScreamParameters_Dielectric_set)
    __swig_setmethods__["Selections"] = _py_scream_ee.ScreamParameters_Selections_set
    __swig_getmethods__["Selections"] = _py_scream_ee.ScreamParameters_Selections_get
    if _newclass:Selections = _swig_property(_py_scream_ee.ScreamParameters_Selections_get, _py_scream_ee.ScreamParameters_Selections_set)
    __swig_setmethods__["MaxSearchNumber"] = _py_scream_ee.ScreamParameters_MaxSearchNumber_set
    __swig_getmethods__["MaxSearchNumber"] = _py_scream_ee.ScreamParameters_MaxSearchNumber_get
    if _newclass:MaxSearchNumber = _swig_property(_py_scream_ee.ScreamParameters_MaxSearchNumber_get, _py_scream_ee.ScreamParameters_MaxSearchNumber_set)
    __swig_setmethods__["AbsStericClashCutoffEL"] = _py_scream_ee.ScreamParameters_AbsStericClashCutoffEL_set
    __swig_getmethods__["AbsStericClashCutoffEL"] = _py_scream_ee.ScreamParameters_AbsStericClashCutoffEL_get
    if _newclass:AbsStericClashCutoffEL = _swig_property(_py_scream_ee.ScreamParameters_AbsStericClashCutoffEL_get, _py_scream_ee.ScreamParameters_AbsStericClashCutoffEL_set)
    __swig_setmethods__["StericClashCutoffEnergy"] = _py_scream_ee.ScreamParameters_StericClashCutoffEnergy_set
    __swig_getmethods__["StericClashCutoffEnergy"] = _py_scream_ee.ScreamParameters_StericClashCutoffEnergy_get
    if _newclass:StericClashCutoffEnergy = _swig_property(_py_scream_ee.ScreamParameters_StericClashCutoffEnergy_get, _py_scream_ee.ScreamParameters_StericClashCutoffEnergy_set)
    __swig_setmethods__["StericClashCutoffDist"] = _py_scream_ee.ScreamParameters_StericClashCutoffDist_set
    __swig_getmethods__["StericClashCutoffDist"] = _py_scream_ee.ScreamParameters_StericClashCutoffDist_get
    if _newclass:StericClashCutoffDist = _swig_property(_py_scream_ee.ScreamParameters_StericClashCutoffDist_get, _py_scream_ee.ScreamParameters_StericClashCutoffDist_set)
    __swig_setmethods__["MaxFinalStepRunTime"] = _py_scream_ee.ScreamParameters_MaxFinalStepRunTime_set
    __swig_getmethods__["MaxFinalStepRunTime"] = _py_scream_ee.ScreamParameters_MaxFinalStepRunTime_get
    if _newclass:MaxFinalStepRunTime = _swig_property(_py_scream_ee.ScreamParameters_MaxFinalStepRunTime_get, _py_scream_ee.ScreamParameters_MaxFinalStepRunTime_set)
    __swig_setmethods__["LibPath"] = _py_scream_ee.ScreamParameters_LibPath_set
    __swig_getmethods__["LibPath"] = _py_scream_ee.ScreamParameters_LibPath_get
    if _newclass:LibPath = _swig_property(_py_scream_ee.ScreamParameters_LibPath_get, _py_scream_ee.ScreamParameters_LibPath_set)
    __swig_setmethods__["Verbosity"] = _py_scream_ee.ScreamParameters_Verbosity_set
    __swig_getmethods__["Verbosity"] = _py_scream_ee.ScreamParameters_Verbosity_get
    if _newclass:Verbosity = _swig_property(_py_scream_ee.ScreamParameters_Verbosity_get, _py_scream_ee.ScreamParameters_Verbosity_set)
    __swig_setmethods__["DesignPositionAndClass"] = _py_scream_ee.ScreamParameters_DesignPositionAndClass_set
    __swig_getmethods__["DesignPositionAndClass"] = _py_scream_ee.ScreamParameters_DesignPositionAndClass_get
    if _newclass:DesignPositionAndClass = _swig_property(_py_scream_ee.ScreamParameters_DesignPositionAndClass_get, _py_scream_ee.ScreamParameters_DesignPositionAndClass_set)
    __swig_setmethods__["DesignAAClassDefns"] = _py_scream_ee.ScreamParameters_DesignAAClassDefns_set
    __swig_getmethods__["DesignAAClassDefns"] = _py_scream_ee.ScreamParameters_DesignAAClassDefns_get
    if _newclass:DesignAAClassDefns = _swig_property(_py_scream_ee.ScreamParameters_DesignAAClassDefns_get, _py_scream_ee.ScreamParameters_DesignAAClassDefns_set)
    __swig_setmethods__["JustOutputSequence"] = _py_scream_ee.ScreamParameters_JustOutputSequence_set
    __swig_getmethods__["JustOutputSequence"] = _py_scream_ee.ScreamParameters_JustOutputSequence_get
    if _newclass:JustOutputSequence = _swig_property(_py_scream_ee.ScreamParameters_JustOutputSequence_get, _py_scream_ee.ScreamParameters_JustOutputSequence_set)
    __swig_setmethods__["StructuresPerSequence"] = _py_scream_ee.ScreamParameters_StructuresPerSequence_set
    __swig_getmethods__["StructuresPerSequence"] = _py_scream_ee.ScreamParameters_StructuresPerSequence_get
    if _newclass:StructuresPerSequence = _swig_property(_py_scream_ee.ScreamParameters_StructuresPerSequence_get, _py_scream_ee.ScreamParameters_StructuresPerSequence_set)
    __swig_setmethods__["BindingSiteMode"] = _py_scream_ee.ScreamParameters_BindingSiteMode_set
    __swig_getmethods__["BindingSiteMode"] = _py_scream_ee.ScreamParameters_BindingSiteMode_get
    if _newclass:BindingSiteMode = _swig_property(_py_scream_ee.ScreamParameters_BindingSiteMode_get, _py_scream_ee.ScreamParameters_BindingSiteMode_set)
    __swig_setmethods__["FixedResidues"] = _py_scream_ee.ScreamParameters_FixedResidues_set
    __swig_getmethods__["FixedResidues"] = _py_scream_ee.ScreamParameters_FixedResidues_get
    if _newclass:FixedResidues = _swig_property(_py_scream_ee.ScreamParameters_FixedResidues_get, _py_scream_ee.ScreamParameters_FixedResidues_set)
    __swig_setmethods__["AroundAtom"] = _py_scream_ee.ScreamParameters_AroundAtom_set
    __swig_getmethods__["AroundAtom"] = _py_scream_ee.ScreamParameters_AroundAtom_get
    if _newclass:AroundAtom = _swig_property(_py_scream_ee.ScreamParameters_AroundAtom_get, _py_scream_ee.ScreamParameters_AroundAtom_set)
    __swig_setmethods__["AroundResidue"] = _py_scream_ee.ScreamParameters_AroundResidue_set
    __swig_getmethods__["AroundResidue"] = _py_scream_ee.ScreamParameters_AroundResidue_get
    if _newclass:AroundResidue = _swig_property(_py_scream_ee.ScreamParameters_AroundResidue_get, _py_scream_ee.ScreamParameters_AroundResidue_set)
    __swig_setmethods__["AroundChain"] = _py_scream_ee.ScreamParameters_AroundChain_set
    __swig_getmethods__["AroundChain"] = _py_scream_ee.ScreamParameters_AroundChain_get
    if _newclass:AroundChain = _swig_property(_py_scream_ee.ScreamParameters_AroundChain_get, _py_scream_ee.ScreamParameters_AroundChain_set)
    __swig_setmethods__["AroundDistance"] = _py_scream_ee.ScreamParameters_AroundDistance_set
    __swig_getmethods__["AroundDistance"] = _py_scream_ee.ScreamParameters_AroundDistance_get
    if _newclass:AroundDistance = _swig_property(_py_scream_ee.ScreamParameters_AroundDistance_get, _py_scream_ee.ScreamParameters_AroundDistance_set)
    __swig_setmethods__["AroundDistanceDefn"] = _py_scream_ee.ScreamParameters_AroundDistanceDefn_set
    __swig_getmethods__["AroundDistanceDefn"] = _py_scream_ee.ScreamParameters_AroundDistanceDefn_get
    if _newclass:AroundDistanceDefn = _swig_property(_py_scream_ee.ScreamParameters_AroundDistanceDefn_get, _py_scream_ee.ScreamParameters_AroundDistanceDefn_set)
    def getMutateResidueInfoList(self): return _py_scream_ee.ScreamParameters_getMutateResidueInfoList(self)
    def getAdditionalLibraryInfo(self): return _py_scream_ee.ScreamParameters_getAdditionalLibraryInfo(self)
    def getKeepOriginalRotamer(self): return _py_scream_ee.ScreamParameters_getKeepOriginalRotamer(self)
    def getUseScreamEnergyFunction(self): return _py_scream_ee.ScreamParameters_getUseScreamEnergyFunction(self)
    def getPlacementMethod(self): return _py_scream_ee.ScreamParameters_getPlacementMethod(self)
    def getCreateCBParameters(self): return _py_scream_ee.ScreamParameters_getCreateCBParameters(self)
    def getUseDeltaMethod(self): return _py_scream_ee.ScreamParameters_getUseDeltaMethod(self)
    def getUseRotamerNeighborList(self): return _py_scream_ee.ScreamParameters_getUseRotamerNeighborList(self)
    def getUseAsymmetricDelta(self): return _py_scream_ee.ScreamParameters_getUseAsymmetricDelta(self)
    def getUseDeltaForInterResiE(self): return _py_scream_ee.ScreamParameters_getUseDeltaForInterResiE(self)
    def getFlatDeltaValue(self): return _py_scream_ee.ScreamParameters_getFlatDeltaValue(self)
    def getDeltaStandardDevs(self): return _py_scream_ee.ScreamParameters_getDeltaStandardDevs(self)
    def getInnerWallScalingFactor(self): return _py_scream_ee.ScreamParameters_getInnerWallScalingFactor(self)
    def getNonPolarHCalc(self): return _py_scream_ee.ScreamParameters_getNonPolarHCalc(self)
    def getOneEnergyFFParFile(self): return _py_scream_ee.ScreamParameters_getOneEnergyFFParFile(self)
    def getDeltaParFile(self): return _py_scream_ee.ScreamParameters_getDeltaParFile(self)
    def getEachAtomDeltaFile(self): return _py_scream_ee.ScreamParameters_getEachAtomDeltaFile(self)
    def getPolarOptimizationExclusions(self): return _py_scream_ee.ScreamParameters_getPolarOptimizationExclusions(self)
    def getSelections(self): return _py_scream_ee.ScreamParameters_getSelections(self)
    def getMaxSearchNumber(self): return _py_scream_ee.ScreamParameters_getMaxSearchNumber(self)
    def getAbsStericClashCutoffEL(self): return _py_scream_ee.ScreamParameters_getAbsStericClashCutoffEL(self)
    def getStericClashCutoffEnergy(self): return _py_scream_ee.ScreamParameters_getStericClashCutoffEnergy(self)
    def getStericClashCutoffDist(self): return _py_scream_ee.ScreamParameters_getStericClashCutoffDist(self)
    def getMaxFinalStepRunTime(self): return _py_scream_ee.ScreamParameters_getMaxFinalStepRunTime(self)
    def getDesignPositionAndClass(self): return _py_scream_ee.ScreamParameters_getDesignPositionAndClass(self)
    def getDesignAAClassDefns(self): return _py_scream_ee.ScreamParameters_getDesignAAClassDefns(self)
    def getJustOutputSequence(self): return _py_scream_ee.ScreamParameters_getJustOutputSequence(self)
    def getLJOption(self): return _py_scream_ee.ScreamParameters_getLJOption(self)
    def getCoulombMode(self): return _py_scream_ee.ScreamParameters_getCoulombMode(self)
    def getDielectric(self): return _py_scream_ee.ScreamParameters_getDielectric(self)
    def getBindingSiteMode(self): return _py_scream_ee.ScreamParameters_getBindingSiteMode(self)
    def getFixedResidues(self): return _py_scream_ee.ScreamParameters_getFixedResidues(self)
    def getAroundAtom(self): return _py_scream_ee.ScreamParameters_getAroundAtom(self)
    def getAroundResidue(self): return _py_scream_ee.ScreamParameters_getAroundResidue(self)
    def getAroundChain(self): return _py_scream_ee.ScreamParameters_getAroundChain(self)
    def getAroundDistance(self): return _py_scream_ee.ScreamParameters_getAroundDistance(self)
    def getAroundDistanceDefn(self): return _py_scream_ee.ScreamParameters_getAroundDistanceDefn(self)
    def getDesignPositions(self): return _py_scream_ee.ScreamParameters_getDesignPositions(self)
    def getDesignClassFromPosition(self, *args): return _py_scream_ee.ScreamParameters_getDesignClassFromPosition(self, *args)
    def getDesignClassAAs(self, *args): return _py_scream_ee.ScreamParameters_getDesignClassAAs(self, *args)
    def multiplePlacementMethod(self): return _py_scream_ee.ScreamParameters_multiplePlacementMethod(self)
    def getCBGroundSpectrumCalc(self): return _py_scream_ee.ScreamParameters_getCBGroundSpectrumCalc(self)
    def read_scream_par_file(self, *args): return _py_scream_ee.ScreamParameters_read_scream_par_file(self, *args)
    def print_to_output(self, *args): return _py_scream_ee.ScreamParameters_print_to_output(self, *args)
    def minimizationMethod(self): return _py_scream_ee.ScreamParameters_minimizationMethod(self)
    def minimizationSteps(self): return _py_scream_ee.ScreamParameters_minimizationSteps(self)
    def oneEMethod(self): return _py_scream_ee.ScreamParameters_oneEMethod(self)
    def residueToScreamName(self, *args): return _py_scream_ee.ScreamParameters_residueToScreamName(self, *args)
    def residueToScreamPstn(self, *args): return _py_scream_ee.ScreamParameters_residueToScreamPstn(self, *args)
    def residueToScreamChn(self, *args): return _py_scream_ee.ScreamParameters_residueToScreamChn(self, *args)
    def determineLibDirPath(self): return _py_scream_ee.ScreamParameters_determineLibDirPath(self)
    def determineLibDirFileNameSuffix(self): return _py_scream_ee.ScreamParameters_determineLibDirFileNameSuffix(self)
    def determineCnnDirPath(self): return _py_scream_ee.ScreamParameters_determineCnnDirPath(self)
    def getLibResolution(self): return _py_scream_ee.ScreamParameters_getLibResolution(self)
    def returnEnergyMethod(self): return _py_scream_ee.ScreamParameters_returnEnergyMethod(self)
    def returnEnergyMethodTValue(self): return _py_scream_ee.ScreamParameters_returnEnergyMethodTValue(self)
    def getVerbosity(self): return _py_scream_ee.ScreamParameters_getVerbosity(self)
    def _init_default_params(self): return _py_scream_ee.ScreamParameters__init_default_params(self)
ScreamParameters_swigregister = _py_scream_ee.ScreamParameters_swigregister
ScreamParameters_swigregister(ScreamParameters)

class SCREAM_ATOM(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, SCREAM_ATOM, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, SCREAM_ATOM, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _py_scream_ee.new_SCREAM_ATOM(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _py_scream_ee.delete_SCREAM_ATOM
    __del__ = lambda self : None;
    def pdb_init(self, *args): return _py_scream_ee.SCREAM_ATOM_pdb_init(self, *args)
    def set_x(self, *args): return _py_scream_ee.SCREAM_ATOM_set_x(self, *args)
    def set_y(self, *args): return _py_scream_ee.SCREAM_ATOM_set_y(self, *args)
    def set_z(self, *args): return _py_scream_ee.SCREAM_ATOM_set_z(self, *args)
    def getAtomLabel(self): return _py_scream_ee.SCREAM_ATOM_getAtomLabel(self)
    def setAtomLabel(self, *args): return _py_scream_ee.SCREAM_ATOM_setAtomLabel(self, *args)
    def getAtomType(self): return _py_scream_ee.SCREAM_ATOM_getAtomType(self)
    def setAtomType(self, *args): return _py_scream_ee.SCREAM_ATOM_setAtomType(self, *args)
    def getX(self): return _py_scream_ee.SCREAM_ATOM_getX(self)
    def setX(self, *args): return _py_scream_ee.SCREAM_ATOM_setX(self, *args)
    def getY(self): return _py_scream_ee.SCREAM_ATOM_getY(self)
    def setY(self, *args): return _py_scream_ee.SCREAM_ATOM_setY(self, *args)
    def getZ(self): return _py_scream_ee.SCREAM_ATOM_getZ(self)
    def setZ(self, *args): return _py_scream_ee.SCREAM_ATOM_setZ(self, *args)
    def getCharge(self): return _py_scream_ee.SCREAM_ATOM_getCharge(self)
    def setCharge(self, *args): return _py_scream_ee.SCREAM_ATOM_setCharge(self, *args)
    def getResName(self): return _py_scream_ee.SCREAM_ATOM_getResName(self)
    def setResName(self, *args): return _py_scream_ee.SCREAM_ATOM_setResName(self, *args)
    def getChain(self): return _py_scream_ee.SCREAM_ATOM_getChain(self)
    def setChain(self, *args): return _py_scream_ee.SCREAM_ATOM_setChain(self, *args)
    def getResNum(self): return _py_scream_ee.SCREAM_ATOM_getResNum(self)
    def setResNum(self, *args): return _py_scream_ee.SCREAM_ATOM_setResNum(self, *args)
    __swig_setmethods__["GLOBAL_ATOM_N"] = _py_scream_ee.SCREAM_ATOM_GLOBAL_ATOM_N_set
    __swig_getmethods__["GLOBAL_ATOM_N"] = _py_scream_ee.SCREAM_ATOM_GLOBAL_ATOM_N_get
    if _newclass:GLOBAL_ATOM_N = _swig_property(_py_scream_ee.SCREAM_ATOM_GLOBAL_ATOM_N_get, _py_scream_ee.SCREAM_ATOM_GLOBAL_ATOM_N_set)
    __swig_setmethods__["keyw"] = _py_scream_ee.SCREAM_ATOM_keyw_set
    __swig_getmethods__["keyw"] = _py_scream_ee.SCREAM_ATOM_keyw_get
    if _newclass:keyw = _swig_property(_py_scream_ee.SCREAM_ATOM_keyw_get, _py_scream_ee.SCREAM_ATOM_keyw_set)
    __swig_setmethods__["atomLabel"] = _py_scream_ee.SCREAM_ATOM_atomLabel_set
    __swig_getmethods__["atomLabel"] = _py_scream_ee.SCREAM_ATOM_atomLabel_get
    if _newclass:atomLabel = _swig_property(_py_scream_ee.SCREAM_ATOM_atomLabel_get, _py_scream_ee.SCREAM_ATOM_atomLabel_set)
    __swig_setmethods__["stripped_atomLabel"] = _py_scream_ee.SCREAM_ATOM_stripped_atomLabel_set
    __swig_getmethods__["stripped_atomLabel"] = _py_scream_ee.SCREAM_ATOM_stripped_atomLabel_get
    if _newclass:stripped_atomLabel = _swig_property(_py_scream_ee.SCREAM_ATOM_stripped_atomLabel_get, _py_scream_ee.SCREAM_ATOM_stripped_atomLabel_set)
    __swig_setmethods__["isSC_Flag"] = _py_scream_ee.SCREAM_ATOM_isSC_Flag_set
    __swig_getmethods__["isSC_Flag"] = _py_scream_ee.SCREAM_ATOM_isSC_Flag_get
    if _newclass:isSC_Flag = _swig_property(_py_scream_ee.SCREAM_ATOM_isSC_Flag_get, _py_scream_ee.SCREAM_ATOM_isSC_Flag_set)
    __swig_setmethods__["isAAResAtom"] = _py_scream_ee.SCREAM_ATOM_isAAResAtom_set
    __swig_getmethods__["isAAResAtom"] = _py_scream_ee.SCREAM_ATOM_isAAResAtom_get
    if _newclass:isAAResAtom = _swig_property(_py_scream_ee.SCREAM_ATOM_isAAResAtom_get, _py_scream_ee.SCREAM_ATOM_isAAResAtom_set)
    __swig_setmethods__["atomType"] = _py_scream_ee.SCREAM_ATOM_atomType_set
    __swig_getmethods__["atomType"] = _py_scream_ee.SCREAM_ATOM_atomType_get
    if _newclass:atomType = _swig_property(_py_scream_ee.SCREAM_ATOM_atomType_get, _py_scream_ee.SCREAM_ATOM_atomType_set)
    __swig_setmethods__["stripped_atomType"] = _py_scream_ee.SCREAM_ATOM_stripped_atomType_set
    __swig_getmethods__["stripped_atomType"] = _py_scream_ee.SCREAM_ATOM_stripped_atomType_get
    if _newclass:stripped_atomType = _swig_property(_py_scream_ee.SCREAM_ATOM_stripped_atomType_get, _py_scream_ee.SCREAM_ATOM_stripped_atomType_set)
    __swig_setmethods__["occupancy"] = _py_scream_ee.SCREAM_ATOM_occupancy_set
    __swig_getmethods__["occupancy"] = _py_scream_ee.SCREAM_ATOM_occupancy_get
    if _newclass:occupancy = _swig_property(_py_scream_ee.SCREAM_ATOM_occupancy_get, _py_scream_ee.SCREAM_ATOM_occupancy_set)
    __swig_setmethods__["BFactor"] = _py_scream_ee.SCREAM_ATOM_BFactor_set
    __swig_getmethods__["BFactor"] = _py_scream_ee.SCREAM_ATOM_BFactor_get
    if _newclass:BFactor = _swig_property(_py_scream_ee.SCREAM_ATOM_BFactor_get, _py_scream_ee.SCREAM_ATOM_BFactor_set)
    __swig_setmethods__["resName"] = _py_scream_ee.SCREAM_ATOM_resName_set
    __swig_getmethods__["resName"] = _py_scream_ee.SCREAM_ATOM_resName_get
    if _newclass:resName = _swig_property(_py_scream_ee.SCREAM_ATOM_resName_get, _py_scream_ee.SCREAM_ATOM_resName_set)
    __swig_setmethods__["oneLetterResName"] = _py_scream_ee.SCREAM_ATOM_oneLetterResName_set
    __swig_getmethods__["oneLetterResName"] = _py_scream_ee.SCREAM_ATOM_oneLetterResName_get
    if _newclass:oneLetterResName = _swig_property(_py_scream_ee.SCREAM_ATOM_oneLetterResName_get, _py_scream_ee.SCREAM_ATOM_oneLetterResName_set)
    __swig_setmethods__["chain"] = _py_scream_ee.SCREAM_ATOM_chain_set
    __swig_getmethods__["chain"] = _py_scream_ee.SCREAM_ATOM_chain_get
    if _newclass:chain = _swig_property(_py_scream_ee.SCREAM_ATOM_chain_get, _py_scream_ee.SCREAM_ATOM_chain_set)
    __swig_setmethods__["resNum"] = _py_scream_ee.SCREAM_ATOM_resNum_set
    __swig_getmethods__["resNum"] = _py_scream_ee.SCREAM_ATOM_resNum_get
    if _newclass:resNum = _swig_property(_py_scream_ee.SCREAM_ATOM_resNum_get, _py_scream_ee.SCREAM_ATOM_resNum_set)
    __swig_setmethods__["atoms_connected"] = _py_scream_ee.SCREAM_ATOM_atoms_connected_set
    __swig_getmethods__["atoms_connected"] = _py_scream_ee.SCREAM_ATOM_atoms_connected_get
    if _newclass:atoms_connected = _swig_property(_py_scream_ee.SCREAM_ATOM_atoms_connected_get, _py_scream_ee.SCREAM_ATOM_atoms_connected_set)
    __swig_setmethods__["lone_pair"] = _py_scream_ee.SCREAM_ATOM_lone_pair_set
    __swig_getmethods__["lone_pair"] = _py_scream_ee.SCREAM_ATOM_lone_pair_get
    if _newclass:lone_pair = _swig_property(_py_scream_ee.SCREAM_ATOM_lone_pair_get, _py_scream_ee.SCREAM_ATOM_lone_pair_set)
    __swig_setmethods__["x"] = _py_scream_ee.SCREAM_ATOM_x_set
    __swig_getmethods__["x"] = _py_scream_ee.SCREAM_ATOM_x_get
    if _newclass:x = _swig_property(_py_scream_ee.SCREAM_ATOM_x_get, _py_scream_ee.SCREAM_ATOM_x_set)
    __swig_setmethods__["q"] = _py_scream_ee.SCREAM_ATOM_q_set
    __swig_getmethods__["q"] = _py_scream_ee.SCREAM_ATOM_q_get
    if _newclass:q = _swig_property(_py_scream_ee.SCREAM_ATOM_q_get, _py_scream_ee.SCREAM_ATOM_q_set)
    __swig_setmethods__["n"] = _py_scream_ee.SCREAM_ATOM_n_set
    __swig_getmethods__["n"] = _py_scream_ee.SCREAM_ATOM_n_get
    if _newclass:n = _swig_property(_py_scream_ee.SCREAM_ATOM_n_get, _py_scream_ee.SCREAM_ATOM_n_set)
    __swig_setmethods__["type"] = _py_scream_ee.SCREAM_ATOM_type_set
    __swig_getmethods__["type"] = _py_scream_ee.SCREAM_ATOM_type_get
    if _newclass:type = _swig_property(_py_scream_ee.SCREAM_ATOM_type_get, _py_scream_ee.SCREAM_ATOM_type_set)
    __swig_setmethods__["flags"] = _py_scream_ee.SCREAM_ATOM_flags_set
    __swig_getmethods__["flags"] = _py_scream_ee.SCREAM_ATOM_flags_get
    if _newclass:flags = _swig_property(_py_scream_ee.SCREAM_ATOM_flags_get, _py_scream_ee.SCREAM_ATOM_flags_set)
    __swig_setmethods__["m"] = _py_scream_ee.SCREAM_ATOM_m_set
    __swig_getmethods__["m"] = _py_scream_ee.SCREAM_ATOM_m_get
    if _newclass:m = _swig_property(_py_scream_ee.SCREAM_ATOM_m_get, _py_scream_ee.SCREAM_ATOM_m_set)
    __swig_setmethods__["vchg2"] = _py_scream_ee.SCREAM_ATOM_vchg2_set
    __swig_getmethods__["vchg2"] = _py_scream_ee.SCREAM_ATOM_vchg2_get
    if _newclass:vchg2 = _swig_property(_py_scream_ee.SCREAM_ATOM_vchg2_get, _py_scream_ee.SCREAM_ATOM_vchg2_set)
    __swig_setmethods__["library_name"] = _py_scream_ee.SCREAM_ATOM_library_name_set
    __swig_getmethods__["library_name"] = _py_scream_ee.SCREAM_ATOM_library_name_get
    if _newclass:library_name = _swig_property(_py_scream_ee.SCREAM_ATOM_library_name_get, _py_scream_ee.SCREAM_ATOM_library_name_set)
    __swig_setmethods__["vdw_r"] = _py_scream_ee.SCREAM_ATOM_vdw_r_set
    __swig_getmethods__["vdw_r"] = _py_scream_ee.SCREAM_ATOM_vdw_r_get
    if _newclass:vdw_r = _swig_property(_py_scream_ee.SCREAM_ATOM_vdw_r_get, _py_scream_ee.SCREAM_ATOM_vdw_r_set)
    __swig_setmethods__["vdw_d"] = _py_scream_ee.SCREAM_ATOM_vdw_d_set
    __swig_getmethods__["vdw_d"] = _py_scream_ee.SCREAM_ATOM_vdw_d_get
    if _newclass:vdw_d = _swig_property(_py_scream_ee.SCREAM_ATOM_vdw_d_get, _py_scream_ee.SCREAM_ATOM_vdw_d_set)
    __swig_setmethods__["vdw_s"] = _py_scream_ee.SCREAM_ATOM_vdw_s_set
    __swig_getmethods__["vdw_s"] = _py_scream_ee.SCREAM_ATOM_vdw_s_get
    if _newclass:vdw_s = _swig_property(_py_scream_ee.SCREAM_ATOM_vdw_s_get, _py_scream_ee.SCREAM_ATOM_vdw_s_set)
    __swig_setmethods__["vachg"] = _py_scream_ee.SCREAM_ATOM_vachg_set
    __swig_getmethods__["vachg"] = _py_scream_ee.SCREAM_ATOM_vachg_get
    if _newclass:vachg = _swig_property(_py_scream_ee.SCREAM_ATOM_vachg_get, _py_scream_ee.SCREAM_ATOM_vachg_set)
    __swig_setmethods__["vrchg"] = _py_scream_ee.SCREAM_ATOM_vrchg_set
    __swig_getmethods__["vrchg"] = _py_scream_ee.SCREAM_ATOM_vrchg_get
    if _newclass:vrchg = _swig_property(_py_scream_ee.SCREAM_ATOM_vrchg_get, _py_scream_ee.SCREAM_ATOM_vrchg_set)
    __swig_setmethods__["hb_da"] = _py_scream_ee.SCREAM_ATOM_hb_da_set
    __swig_getmethods__["hb_da"] = _py_scream_ee.SCREAM_ATOM_hb_da_get
    if _newclass:hb_da = _swig_property(_py_scream_ee.SCREAM_ATOM_hb_da_get, _py_scream_ee.SCREAM_ATOM_hb_da_set)
    __swig_setmethods__["a"] = _py_scream_ee.SCREAM_ATOM_a_set
    __swig_getmethods__["a"] = _py_scream_ee.SCREAM_ATOM_a_get
    if _newclass:a = _swig_property(_py_scream_ee.SCREAM_ATOM_a_get, _py_scream_ee.SCREAM_ATOM_a_set)
    __swig_setmethods__["delta"] = _py_scream_ee.SCREAM_ATOM_delta_set
    __swig_getmethods__["delta"] = _py_scream_ee.SCREAM_ATOM_delta_get
    if _newclass:delta = _swig_property(_py_scream_ee.SCREAM_ATOM_delta_get, _py_scream_ee.SCREAM_ATOM_delta_set)
    __swig_setmethods__["connectivity_m"] = _py_scream_ee.SCREAM_ATOM_connectivity_m_set
    __swig_getmethods__["connectivity_m"] = _py_scream_ee.SCREAM_ATOM_connectivity_m_get
    if _newclass:connectivity_m = _swig_property(_py_scream_ee.SCREAM_ATOM_connectivity_m_get, _py_scream_ee.SCREAM_ATOM_connectivity_m_set)
    def initFlag(self): return _py_scream_ee.SCREAM_ATOM_initFlag(self)
    def resetFlag(self): return _py_scream_ee.SCREAM_ATOM_resetFlag(self)
    def make_atom_moveable(self): return _py_scream_ee.SCREAM_ATOM_make_atom_moveable(self)
    def make_atom_fixed(self): return _py_scream_ee.SCREAM_ATOM_make_atom_fixed(self)
    def make_atom_invisible(self): return _py_scream_ee.SCREAM_ATOM_make_atom_invisible(self)
    def make_atom_visible(self): return _py_scream_ee.SCREAM_ATOM_make_atom_visible(self)
    def make_atom_EL_invisible(self): return _py_scream_ee.SCREAM_ATOM_make_atom_EL_invisible(self)
    def make_atom_EL_visible(self): return _py_scream_ee.SCREAM_ATOM_make_atom_EL_visible(self)
    def is_part_of_EE(self): return _py_scream_ee.SCREAM_ATOM_is_part_of_EE(self)
    def fix_atom(self, *args): return _py_scream_ee.SCREAM_ATOM_fix_atom(self, *args)
    def distance(self, *args): return _py_scream_ee.SCREAM_ATOM_distance(self, *args)
    def distance_squared(self, *args): return _py_scream_ee.SCREAM_ATOM_distance_squared(self, *args)
    def worst_clash_dist(self, *args): return _py_scream_ee.SCREAM_ATOM_worst_clash_dist(self, *args)
    def feed_me(self, *args): return _py_scream_ee.SCREAM_ATOM_feed_me(self, *args)
    def feed_me_pdb(self, *args): return _py_scream_ee.SCREAM_ATOM_feed_me_pdb(self, *args)
    def make_bond(self, *args): return _py_scream_ee.SCREAM_ATOM_make_bond(self, *args)
    def delete_bond(self, *args): return _py_scream_ee.SCREAM_ATOM_delete_bond(self, *args)
    def copy(self, *args): return _py_scream_ee.SCREAM_ATOM_copy(self, *args)
    def copyJustCoords(self, *args): return _py_scream_ee.SCREAM_ATOM_copyJustCoords(self, *args)
    def dump(self): return _py_scream_ee.SCREAM_ATOM_dump(self)
    def pdb_dump(self): return _py_scream_ee.SCREAM_ATOM_pdb_dump(self)
    def return_bgf_line(self): return _py_scream_ee.SCREAM_ATOM_return_bgf_line(self)
    def return_pdb_line(self): return _py_scream_ee.SCREAM_ATOM_return_pdb_line(self)
    def append_to_filehandle(self, *args): return _py_scream_ee.SCREAM_ATOM_append_to_filehandle(self, *args)
    def pdb_append_to_filehandle(self, *args): return _py_scream_ee.SCREAM_ATOM_pdb_append_to_filehandle(self, *args)
    def pdb_append_to_ostream_connect_info(self, *args): return _py_scream_ee.SCREAM_ATOM_pdb_append_to_ostream_connect_info(self, *args)
    def append_to_ostream_connect_info(self, *args): return _py_scream_ee.SCREAM_ATOM_append_to_ostream_connect_info(self, *args)
SCREAM_ATOM_swigregister = _py_scream_ee.SCREAM_ATOM_swigregister
SCREAM_ATOM_swigregister(SCREAM_ATOM)

class Rotamer(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Rotamer, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Rotamer, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _py_scream_ee.new_Rotamer(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _py_scream_ee.delete_Rotamer
    __del__ = lambda self : None;
    def deepcopy(self, *args): return _py_scream_ee.Rotamer_deepcopy(self, *args)
    def read_cnn_lines(self, *args): return _py_scream_ee.Rotamer_read_cnn_lines(self, *args)
    def print_Me(self): return _py_scream_ee.Rotamer_print_Me(self)
    def print_ordered_by_n(self): return _py_scream_ee.Rotamer_print_ordered_by_n(self)
    def append_to_filehandle(self, *args): return _py_scream_ee.Rotamer_append_to_filehandle(self, *args)
    def pdb_append_to_filehandle(self, *args): return _py_scream_ee.Rotamer_pdb_append_to_filehandle(self, *args)
    def append_to_ostream_connect_info(self, *args): return _py_scream_ee.Rotamer_append_to_ostream_connect_info(self, *args)
    def printEnergies(self): return _py_scream_ee.Rotamer_printEnergies(self)
    __swig_setmethods__["self_E"] = _py_scream_ee.Rotamer_self_E_set
    __swig_getmethods__["self_E"] = _py_scream_ee.Rotamer_self_E_get
    if _newclass:self_E = _swig_property(_py_scream_ee.Rotamer_self_E_get, _py_scream_ee.Rotamer_self_E_set)
    __swig_setmethods__["is_Original"] = _py_scream_ee.Rotamer_is_Original_set
    __swig_getmethods__["is_Original"] = _py_scream_ee.Rotamer_is_Original_get
    if _newclass:is_Original = _swig_property(_py_scream_ee.Rotamer_is_Original_get, _py_scream_ee.Rotamer_is_Original_set)
    def get_is_Original_flag(self): return _py_scream_ee.Rotamer_get_is_Original_flag(self)
    def set_is_Original_flag(self, *args): return _py_scream_ee.Rotamer_set_is_Original_flag(self, *args)
    __swig_setmethods__["same_backbone"] = _py_scream_ee.Rotamer_same_backbone_set
    __swig_getmethods__["same_backbone"] = _py_scream_ee.Rotamer_same_backbone_get
    if _newclass:same_backbone = _swig_property(_py_scream_ee.Rotamer_same_backbone_get, _py_scream_ee.Rotamer_same_backbone_set)
    __swig_setmethods__["library_name"] = _py_scream_ee.Rotamer_library_name_set
    __swig_getmethods__["library_name"] = _py_scream_ee.Rotamer_library_name_get
    if _newclass:library_name = _swig_property(_py_scream_ee.Rotamer_library_name_get, _py_scream_ee.Rotamer_library_name_set)
    def get_bb(self): return _py_scream_ee.Rotamer_get_bb(self)
    def get_sc(self): return _py_scream_ee.Rotamer_get_sc(self)
    def get_sc_atoms(self): return _py_scream_ee.Rotamer_get_sc_atoms(self)
    def get_bb_atoms(self): return _py_scream_ee.Rotamer_get_bb_atoms(self)
    def getAtom(self, *args): return _py_scream_ee.Rotamer_getAtom(self, *args)
    def getTheseAtoms(self, *args): return _py_scream_ee.Rotamer_getTheseAtoms(self, *args)
    def getAllRotamers(self): return _py_scream_ee.Rotamer_getAllRotamers(self)
    def fix_toggle(self, *args): return _py_scream_ee.Rotamer_fix_toggle(self, *args)
    def fix_sc_toggle(self, *args): return _py_scream_ee.Rotamer_fix_sc_toggle(self, *args)
    def fix_bb_toggle(self, *args): return _py_scream_ee.Rotamer_fix_bb_toggle(self, *args)
    def number_of_atoms(self): return _py_scream_ee.Rotamer_number_of_atoms(self)
    def total_charge(self): return _py_scream_ee.Rotamer_total_charge(self)
    def get_rotamer_n(self): return _py_scream_ee.Rotamer_get_rotamer_n(self)
    def get_mult_H_n(self): return _py_scream_ee.Rotamer_get_mult_H_n(self)
    def get_library_name(self): return _py_scream_ee.Rotamer_get_library_name(self)
    def get_empty_lattice_E(self): return _py_scream_ee.Rotamer_get_empty_lattice_E(self)
    def set_empty_lattice_E(self, *args): return _py_scream_ee.Rotamer_set_empty_lattice_E(self, *args)
    def get_empty_lattice_E_abs(self): return _py_scream_ee.Rotamer_get_empty_lattice_E_abs(self)
    def set_empty_lattice_E_abs(self, *args): return _py_scream_ee.Rotamer_set_empty_lattice_E_abs(self, *args)
    def get_empty_lattice_energy_rank(self): return _py_scream_ee.Rotamer_get_empty_lattice_energy_rank(self)
    def set_empty_lattice_energy_rank(self, *args): return _py_scream_ee.Rotamer_set_empty_lattice_energy_rank(self, *args)
    def setFailedDistanceCutoff(self): return _py_scream_ee.Rotamer_setFailedDistanceCutoff(self)
    def setPassedDistanceCutoff(self): return _py_scream_ee.Rotamer_setPassedDistanceCutoff(self)
    def failedDistanceCutoff(self): return _py_scream_ee.Rotamer_failedDistanceCutoff(self)
    def sameResidueTypeAs(self, *args): return _py_scream_ee.Rotamer_sameResidueTypeAs(self, *args)
    def get_preCalc_Energy_Line(self): return _py_scream_ee.Rotamer_get_preCalc_Energy_Line(self)
    def populate_preCalc_Terms(self, *args): return _py_scream_ee.Rotamer_populate_preCalc_Terms(self, *args)
    def get_preCalc_TotE(self): return _py_scream_ee.Rotamer_get_preCalc_TotE(self)
    def get_preCalc_BondsE(self): return _py_scream_ee.Rotamer_get_preCalc_BondsE(self)
    def get_preCalc_AnglesE(self): return _py_scream_ee.Rotamer_get_preCalc_AnglesE(self)
    def get_preCalc_TorsionsE(self): return _py_scream_ee.Rotamer_get_preCalc_TorsionsE(self)
    def get_preCalc_InversionsE(self): return _py_scream_ee.Rotamer_get_preCalc_InversionsE(self)
    def get_preCalc_CoulombE(self): return _py_scream_ee.Rotamer_get_preCalc_CoulombE(self)
    def get_preCalc_vdwE(self): return _py_scream_ee.Rotamer_get_preCalc_vdwE(self)
    def get_preCalc_HBondE(self): return _py_scream_ee.Rotamer_get_preCalc_HBondE(self)
    def get_preCalc_SolvE(self): return _py_scream_ee.Rotamer_get_preCalc_SolvE(self)
    def set_preCalc_TotE(self, *args): return _py_scream_ee.Rotamer_set_preCalc_TotE(self, *args)
    def set_preCalc_BondsE(self, *args): return _py_scream_ee.Rotamer_set_preCalc_BondsE(self, *args)
    def set_preCalc_AnglesE(self, *args): return _py_scream_ee.Rotamer_set_preCalc_AnglesE(self, *args)
    def set_preCalc_TorsionsE(self, *args): return _py_scream_ee.Rotamer_set_preCalc_TorsionsE(self, *args)
    def set_preCalc_InversionsE(self, *args): return _py_scream_ee.Rotamer_set_preCalc_InversionsE(self, *args)
    def set_preCalc_CoulombE(self, *args): return _py_scream_ee.Rotamer_set_preCalc_CoulombE(self, *args)
    def set_preCalc_vdwE(self, *args): return _py_scream_ee.Rotamer_set_preCalc_vdwE(self, *args)
    def set_preCalc_HBondE(self, *args): return _py_scream_ee.Rotamer_set_preCalc_HBondE(self, *args)
    def set_preCalc_SolvE(self, *args): return _py_scream_ee.Rotamer_set_preCalc_SolvE(self, *args)
    def get_rotlib_E(self): return _py_scream_ee.Rotamer_get_rotlib_E(self)
    def get_sc_valence_E(self): return _py_scream_ee.Rotamer_get_sc_valence_E(self)
    def get_sc_coulomb_E(self): return _py_scream_ee.Rotamer_get_sc_coulomb_E(self)
    def get_sc_vdw_E(self): return _py_scream_ee.Rotamer_get_sc_vdw_E(self)
    def get_sc_hb_E(self): return _py_scream_ee.Rotamer_get_sc_hb_E(self)
    def get_sc_total_nb_E(self): return _py_scream_ee.Rotamer_get_sc_total_nb_E(self)
    def get_sc_solvation_E(self): return _py_scream_ee.Rotamer_get_sc_solvation_E(self)
    def get_sc_total_E(self): return _py_scream_ee.Rotamer_get_sc_total_E(self)
    def set_rotamer_n(self, *args): return _py_scream_ee.Rotamer_set_rotamer_n(self, *args)
    def set_rotlib_E(self, *args): return _py_scream_ee.Rotamer_set_rotlib_E(self, *args)
    def set_sc_valence_E(self, *args): return _py_scream_ee.Rotamer_set_sc_valence_E(self, *args)
    def set_sc_coulomb_E(self, *args): return _py_scream_ee.Rotamer_set_sc_coulomb_E(self, *args)
    def set_sc_vdw_E(self, *args): return _py_scream_ee.Rotamer_set_sc_vdw_E(self, *args)
    def set_sc_hb_E(self, *args): return _py_scream_ee.Rotamer_set_sc_hb_E(self, *args)
    def set_sc_total_nb_E(self, *args): return _py_scream_ee.Rotamer_set_sc_total_nb_E(self, *args)
    def set_sc_solvation_E(self, *args): return _py_scream_ee.Rotamer_set_sc_solvation_E(self, *args)
    def set_sc_total_E(self, *args): return _py_scream_ee.Rotamer_set_sc_total_E(self, *args)
    def match_bb(self, *args): return _py_scream_ee.Rotamer_match_bb(self, *args)
    def match_CB(self, *args): return _py_scream_ee.Rotamer_match_CB(self, *args)
    def assign_atom_fftype(self): return _py_scream_ee.Rotamer_assign_atom_fftype(self)
    def assign_charges(self, *args): return _py_scream_ee.Rotamer_assign_charges(self, *args)
    def assign_lone_pair(self): return _py_scream_ee.Rotamer_assign_lone_pair(self)
    def declaredInRotlibScope(self): return _py_scream_ee.Rotamer_declaredInRotlibScope(self)
    def setDeclaredInRotlibScope(self, *args): return _py_scream_ee.Rotamer_setDeclaredInRotlibScope(self, *args)
Rotamer_swigregister = _py_scream_ee.Rotamer_swigregister
Rotamer_swigregister(Rotamer)

class AARotamer(Rotamer):
    __swig_setmethods__ = {}
    for _s in [Rotamer]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, AARotamer, name, value)
    __swig_getmethods__ = {}
    for _s in [Rotamer]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, AARotamer, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _py_scream_ee.new_AARotamer(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _py_scream_ee.delete_AARotamer
    __del__ = lambda self : None;
    def deepcopy(self, *args): return _py_scream_ee.AARotamer_deepcopy(self, *args)
    def get_resName(self): return _py_scream_ee.AARotamer_get_resName(self)
    def set_resName(self, *args): return _py_scream_ee.AARotamer_set_resName(self, *args)
    def initRotamerAtomList(self, *args): return _py_scream_ee.AARotamer_initRotamerAtomList(self, *args)
    def calc_PHI(self): return _py_scream_ee.AARotamer_calc_PHI(self)
    def calc_PSI(self): return _py_scream_ee.AARotamer_calc_PSI(self)
    def get_PHI(self): return _py_scream_ee.AARotamer_get_PHI(self)
    def get_PSI(self): return _py_scream_ee.AARotamer_get_PSI(self)
    def chi1(self): return _py_scream_ee.AARotamer_chi1(self)
    def chi2(self): return _py_scream_ee.AARotamer_chi2(self)
    def chi3(self): return _py_scream_ee.AARotamer_chi3(self)
    def chi4(self): return _py_scream_ee.AARotamer_chi4(self)
    def chi5(self): return _py_scream_ee.AARotamer_chi5(self)
    def match_bb(self, *args): return _py_scream_ee.AARotamer_match_bb(self, *args)
    def match_CB(self, *args): return _py_scream_ee.AARotamer_match_CB(self, *args)
    def create_CB(self, *args): return _py_scream_ee.AARotamer_create_CB(self, *args)
    def assign_atom_fftype(self): return _py_scream_ee.AARotamer_assign_atom_fftype(self)
    def assign_charges(self, *args): return _py_scream_ee.AARotamer_assign_charges(self, *args)
    def assign_lone_pair(self): return _py_scream_ee.AARotamer_assign_lone_pair(self)
    def calc_C_i_minus_one(self): return _py_scream_ee.AARotamer_calc_C_i_minus_one(self)
    def center_CA(self): return _py_scream_ee.AARotamer_center_CA(self)
    def append_to_filehandle(self, *args): return _py_scream_ee.AARotamer_append_to_filehandle(self, *args)
    def pdb_append_to_filehandle(self, *args): return _py_scream_ee.AARotamer_pdb_append_to_filehandle(self, *args)
    def append_to_ostream_connect_info(self, *args): return _py_scream_ee.AARotamer_append_to_ostream_connect_info(self, *args)
    def print_Me(self): return _py_scream_ee.AARotamer_print_Me(self)
    def print_ordered_by_n(self): return _py_scream_ee.AARotamer_print_ordered_by_n(self)
    def get_bb(self): return _py_scream_ee.AARotamer_get_bb(self)
    def get_sc(self): return _py_scream_ee.AARotamer_get_sc(self)
    __swig_setmethods__["PHI"] = _py_scream_ee.AARotamer_PHI_set
    __swig_getmethods__["PHI"] = _py_scream_ee.AARotamer_PHI_get
    if _newclass:PHI = _swig_property(_py_scream_ee.AARotamer_PHI_get, _py_scream_ee.AARotamer_PHI_set)
    __swig_setmethods__["PSI"] = _py_scream_ee.AARotamer_PSI_set
    __swig_getmethods__["PSI"] = _py_scream_ee.AARotamer_PSI_get
    if _newclass:PSI = _swig_property(_py_scream_ee.AARotamer_PSI_get, _py_scream_ee.AARotamer_PSI_set)
    __swig_setmethods__["resName"] = _py_scream_ee.AARotamer_resName_set
    __swig_getmethods__["resName"] = _py_scream_ee.AARotamer_resName_get
    if _newclass:resName = _swig_property(_py_scream_ee.AARotamer_resName_get, _py_scream_ee.AARotamer_resName_set)
    def private_chi(self, *args): return _py_scream_ee.AARotamer_private_chi(self, *args)
    def _determine_and_fix_GLY_sidechain_HCA_issue(self, *args): return _py_scream_ee.AARotamer__determine_and_fix_GLY_sidechain_HCA_issue(self, *args)
AARotamer_swigregister = _py_scream_ee.AARotamer_swigregister
AARotamer_swigregister(AARotamer)

class Protein(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Protein, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Protein, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _py_scream_ee.new_Protein(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _py_scream_ee.delete_Protein
    __del__ = lambda self : None;
    def get_AAChain(self, *args): return _py_scream_ee.Protein_get_AAChain(self, *args)
    def get_Ligand(self): return _py_scream_ee.Protein_get_Ligand(self)
    def get_Component_with_ChainName(self, *args): return _py_scream_ee.Protein_get_Component_with_ChainName(self, *args)
    def get_res_type(self, *args): return _py_scream_ee.Protein_get_res_type(self, *args)
    def get_sc_atoms(self, *args): return _py_scream_ee.Protein_get_sc_atoms(self, *args)
    def get_variable_atoms(self, *args): return _py_scream_ee.Protein_get_variable_atoms(self, *args)
    def get_visible_in_EL_mutInfo_atoms(self, *args): return _py_scream_ee.Protein_get_visible_in_EL_mutInfo_atoms(self, *args)
    def getAtomList(self, *args): return _py_scream_ee.Protein_getAtomList(self, *args)
    def getNewAtomList(self): return _py_scream_ee.Protein_getNewAtomList(self)
    def getAtom(self, *args): return _py_scream_ee.Protein_getAtom(self, *args)
    def getTheseAtoms(self, *args): return _py_scream_ee.Protein_getTheseAtoms(self, *args)
    def addHydrogens(self): return _py_scream_ee.Protein_addHydrogens(self)
    def addConnectivity(self): return _py_scream_ee.Protein_addConnectivity(self)
    def assignFFType(self, *args): return _py_scream_ee.Protein_assignFFType(self, *args)
    def residuesAroundAtomN(self, *args): return _py_scream_ee.Protein_residuesAroundAtomN(self, *args)
    def residuesAroundResidue(self, *args): return _py_scream_ee.Protein_residuesAroundResidue(self, *args)
    def residuesAroundChain(self, *args): return _py_scream_ee.Protein_residuesAroundChain(self, *args)
    def residuesAroundAtom(self, *args): return _py_scream_ee.Protein_residuesAroundAtom(self, *args)
    def totalComponents(self): return _py_scream_ee.Protein_totalComponents(self)
    def mutationDone(self): return _py_scream_ee.Protein_mutationDone(self)
    def setMutInfoStrainEnergy(self, *args): return _py_scream_ee.Protein_setMutInfoStrainEnergy(self, *args)
    def getMutInfoStrainEnergy(self, *args): return _py_scream_ee.Protein_getMutInfoStrainEnergy(self, *args)
    def printAtomFlagStates(self): return _py_scream_ee.Protein_printAtomFlagStates(self)
    def getPlacementMethod(self): return _py_scream_ee.Protein_getPlacementMethod(self)
    def setPlacementMethod(self, *args): return _py_scream_ee.Protein_setPlacementMethod(self, *args)
    def getOffBisectorAngle(self): return _py_scream_ee.Protein_getOffBisectorAngle(self)
    def getOffPlaneAngle(self): return _py_scream_ee.Protein_getOffPlaneAngle(self)
    def getBondLength(self): return _py_scream_ee.Protein_getBondLength(self)
    def getRotamerMatchVectorLamdba(self): return _py_scream_ee.Protein_getRotamerMatchVectorLamdba(self)
    def setOffBisectorAngle(self, *args): return _py_scream_ee.Protein_setOffBisectorAngle(self, *args)
    def setOffPlaneAngle(self, *args): return _py_scream_ee.Protein_setOffPlaneAngle(self, *args)
    def setBondLength(self, *args): return _py_scream_ee.Protein_setBondLength(self, *args)
    def setRotamerMatchVectorLamdba(self, *args): return _py_scream_ee.Protein_setRotamerMatchVectorLamdba(self, *args)
    def ntrlRotamerPlacement(self, *args): return _py_scream_ee.Protein_ntrlRotamerPlacement(self, *args)
    def getAARotamer(self, *args): return _py_scream_ee.Protein_getAARotamer(self, *args)
    def conformerPlacement(self, *args): return _py_scream_ee.Protein_conformerPlacement(self, *args)
    def conformerExtraction(self, *args): return _py_scream_ee.Protein_conformerExtraction(self, *args)
    def rotamerClusterPlacement(self, *args): return _py_scream_ee.Protein_rotamerClusterPlacement(self, *args)
    def setRotamerClusterEmptyLatticeEnergy(self, *args): return _py_scream_ee.Protein_setRotamerClusterEmptyLatticeEnergy(self, *args)
    def getRotamerClusterEmptyLatticeEnergy(self, *args): return _py_scream_ee.Protein_getRotamerClusterEmptyLatticeEnergy(self, *args)
    def mutation(self, *args): return _py_scream_ee.Protein_mutation(self, *args)
    def setPreCalcEnergy(self, *args): return _py_scream_ee.Protein_setPreCalcEnergy(self, *args)
    def getPreCalcEnergy(self, *args): return _py_scream_ee.Protein_getPreCalcEnergy(self, *args)
    def setEmptyLatticeEnergy(self, *args): return _py_scream_ee.Protein_setEmptyLatticeEnergy(self, *args)
    def getEmptyLatticeEnergy(self, *args): return _py_scream_ee.Protein_getEmptyLatticeEnergy(self, *args)
    def setSideChainLibraryName(self, *args): return _py_scream_ee.Protein_setSideChainLibraryName(self, *args)
    def setProteinLibraryName(self, *args): return _py_scream_ee.Protein_setProteinLibraryName(self, *args)
    def resetFlags(self): return _py_scream_ee.Protein_resetFlags(self)
    def getNewMapping(self): return _py_scream_ee.Protein_getNewMapping(self)
    def sc_clash(self, *args): return _py_scream_ee.Protein_sc_clash(self, *args)
    def conformer_clash(self, *args): return _py_scream_ee.Protein_conformer_clash(self, *args)
    def sc_CRMS(self, *args): return _py_scream_ee.Protein_sc_CRMS(self, *args)
    def conformer_CRMS(self, *args): return _py_scream_ee.Protein_conformer_CRMS(self, *args)
    def max_atom_dist_on_SC(self, *args): return _py_scream_ee.Protein_max_atom_dist_on_SC(self, *args)
    def sc_atom_CRMS(self, *args): return _py_scream_ee.Protein_sc_atom_CRMS(self, *args)
    def fix_entire_atom_list_ordering(self): return _py_scream_ee.Protein_fix_entire_atom_list_ordering(self)
    def fix_toggle(self, *args): return _py_scream_ee.Protein_fix_toggle(self, *args)
    def fix_sc_toggle(self, *args): return _py_scream_ee.Protein_fix_sc_toggle(self, *args)
    def append_to_filehandle(self, *args): return _py_scream_ee.Protein_append_to_filehandle(self, *args)
    def pdb_append_to_filehandle(self, *args): return _py_scream_ee.Protein_pdb_append_to_filehandle(self, *args)
    def print_bgf_file(self, *args): return _py_scream_ee.Protein_print_bgf_file(self, *args)
    def print_Me(self): return _py_scream_ee.Protein_print_Me(self)
    def print_ordered_by_n(self): return _py_scream_ee.Protein_print_ordered_by_n(self)
Protein_swigregister = _py_scream_ee.Protein_swigregister
Protein_swigregister(Protein)

class Rotlib(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Rotlib, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Rotlib, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _py_scream_ee.new_Rotlib(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _py_scream_ee.delete_Rotlib
    __del__ = lambda self : None;
    def readConnectivityFile(self, *args): return _py_scream_ee.Rotlib_readConnectivityFile(self, *args)
    def readRotamerLibrary(self, *args): return _py_scream_ee.Rotlib_readRotamerLibrary(self, *args)
    def get_library_name(self): return _py_scream_ee.Rotlib_get_library_name(self)
    def getRotConnInfo(self): return _py_scream_ee.Rotlib_getRotConnInfo(self)
    def get_next_rot(self): return _py_scream_ee.Rotlib_get_next_rot(self)
    def get_current_rot(self): return _py_scream_ee.Rotlib_get_current_rot(self)
    def get_next_rot_with_empty_lattice_E_below(self, *args): return _py_scream_ee.Rotlib_get_next_rot_with_empty_lattice_E_below(self, *args)
    def get_empty_lattice_E_rot(self, *args): return _py_scream_ee.Rotlib_get_empty_lattice_E_rot(self, *args)
    def get_empty_lattice_E_rot_after_sorted_by_empty_lattice_E(self, *args): return _py_scream_ee.Rotlib_get_empty_lattice_E_rot_after_sorted_by_empty_lattice_E(self, *args)
    def reset_pstn(self): return _py_scream_ee.Rotlib_reset_pstn(self)
    def size(self): return _py_scream_ee.Rotlib_size(self)
    def n_rotamers_below_empty_lattice_energy(self, *args): return _py_scream_ee.Rotlib_n_rotamers_below_empty_lattice_energy(self, *args)
    def add_rotamer(self, *args): return _py_scream_ee.Rotlib_add_rotamer(self, *args)
    def new_rotamer(self): return _py_scream_ee.Rotlib_new_rotamer(self)
    def new_rotamer_cluster(self): return _py_scream_ee.Rotlib_new_rotamer_cluster(self)
    def print_Me(self): return _py_scream_ee.Rotlib_print_Me(self)
    def print_to_file(self, *args): return _py_scream_ee.Rotlib_print_to_file(self, *args)
    def sort_by_rotlib_E(self): return _py_scream_ee.Rotlib_sort_by_rotlib_E(self)
    def sort_by_self_E(self): return _py_scream_ee.Rotlib_sort_by_self_E(self)
    def sort_by_empty_lattice_E(self): return _py_scream_ee.Rotlib_sort_by_empty_lattice_E(self)
    def get_best_preCalc_E(self): return _py_scream_ee.Rotlib_get_best_preCalc_E(self)
Rotlib_swigregister = _py_scream_ee.Rotlib_swigregister
Rotlib_swigregister(Rotlib)

class AARotlib(Rotlib):
    __swig_setmethods__ = {}
    for _s in [Rotlib]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, AARotlib, name, value)
    __swig_getmethods__ = {}
    for _s in [Rotlib]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, AARotlib, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _py_scream_ee.new_AARotlib()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _py_scream_ee.delete_AARotlib
    __del__ = lambda self : None;
    def get_next_rot(self): return _py_scream_ee.AARotlib_get_next_rot(self)
    def get_current_rot(self): return _py_scream_ee.AARotlib_get_current_rot(self)
    def get_rot(self, *args): return _py_scream_ee.AARotlib_get_rot(self, *args)
    def reset_rot_pstn(self): return _py_scream_ee.AARotlib_reset_rot_pstn(self)
    def set_rot_pstn(self, *args): return _py_scream_ee.AARotlib_set_rot_pstn(self, *args)
    def get_next_rot_with_empty_lattice_E_below(self, *args): return _py_scream_ee.AARotlib_get_next_rot_with_empty_lattice_E_below(self, *args)
    def get_empty_lattice_E_rot(self, *args): return _py_scream_ee.AARotlib_get_empty_lattice_E_rot(self, *args)
    def center_CA(self): return _py_scream_ee.AARotlib_center_CA(self)
    def calc_all_PHI(self): return _py_scream_ee.AARotlib_calc_all_PHI(self)
    def calc_all_PSI(self): return _py_scream_ee.AARotlib_calc_all_PSI(self)
    __swig_setmethods__["resName"] = _py_scream_ee.AARotlib_resName_set
    __swig_getmethods__["resName"] = _py_scream_ee.AARotlib_resName_get
    if _newclass:resName = _swig_property(_py_scream_ee.AARotlib_resName_get, _py_scream_ee.AARotlib_resName_set)
AARotlib_swigregister = _py_scream_ee.AARotlib_swigregister
AARotlib_swigregister(AARotlib)

class NtrlAARotlib(AARotlib):
    __swig_setmethods__ = {}
    for _s in [AARotlib]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, NtrlAARotlib, name, value)
    __swig_getmethods__ = {}
    for _s in [AARotlib]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, NtrlAARotlib, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _py_scream_ee.new_NtrlAARotlib(*args)
        try: self.this.append(this)
        except: self.this = this
    def setup_library(self): return _py_scream_ee.NtrlAARotlib_setup_library(self)
    __swig_destroy__ = _py_scream_ee.delete_NtrlAARotlib
    __del__ = lambda self : None;
    def assign_atom_fftype(self): return _py_scream_ee.NtrlAARotlib_assign_atom_fftype(self)
    def assign_charges(self, *args): return _py_scream_ee.NtrlAARotlib_assign_charges(self, *args)
    def assign_lone_pair(self): return _py_scream_ee.NtrlAARotlib_assign_lone_pair(self)
    def append_to_filehandle(self, *args): return _py_scream_ee.NtrlAARotlib_append_to_filehandle(self, *args)
NtrlAARotlib_swigregister = _py_scream_ee.NtrlAARotlib_swigregister
NtrlAARotlib_swigregister(NtrlAARotlib)

class Multiple_NtrlAARotlib(NtrlAARotlib):
    __swig_setmethods__ = {}
    for _s in [NtrlAARotlib]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, Multiple_NtrlAARotlib, name, value)
    __swig_getmethods__ = {}
    for _s in [NtrlAARotlib]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, Multiple_NtrlAARotlib, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _py_scream_ee.new_Multiple_NtrlAARotlib(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _py_scream_ee.delete_Multiple_NtrlAARotlib
    __del__ = lambda self : None;
    def getRotConnInfo(self): return _py_scream_ee.Multiple_NtrlAARotlib_getRotConnInfo(self)
    def add_library(self, *args): return _py_scream_ee.Multiple_NtrlAARotlib_add_library(self, *args)
Multiple_NtrlAARotlib_swigregister = _py_scream_ee.Multiple_NtrlAARotlib_swigregister
Multiple_NtrlAARotlib_swigregister(Multiple_NtrlAARotlib)

class HIS_NtrlAARotlib(NtrlAARotlib):
    __swig_setmethods__ = {}
    for _s in [NtrlAARotlib]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, HIS_NtrlAARotlib, name, value)
    __swig_getmethods__ = {}
    for _s in [NtrlAARotlib]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, HIS_NtrlAARotlib, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _py_scream_ee.new_HIS_NtrlAARotlib(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _py_scream_ee.delete_HIS_NtrlAARotlib
    __del__ = lambda self : None;
    def add_rotamer(self, *args): return _py_scream_ee.HIS_NtrlAARotlib_add_rotamer(self, *args)
HIS_NtrlAARotlib_swigregister = _py_scream_ee.HIS_NtrlAARotlib_swigregister
HIS_NtrlAARotlib_swigregister(HIS_NtrlAARotlib)

class RotlibCollection(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RotlibCollection, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RotlibCollection, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _py_scream_ee.new_RotlibCollection()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _py_scream_ee.delete_RotlibCollection
    __del__ = lambda self : None;
    def addRotlib(self, *args): return _py_scream_ee.RotlibCollection_addRotlib(self, *args)
    def addClashCollection(self, *args): return _py_scream_ee.RotlibCollection_addClashCollection(self, *args)
    def initEmptyLatticeDataStructures(self): return _py_scream_ee.RotlibCollection_initEmptyLatticeDataStructures(self)
    def initDynamicMemoryDataStructures(self): return _py_scream_ee.RotlibCollection_initDynamicMemoryDataStructures(self)
    def initAllocationUnderEnergyThreshold(self, *args): return _py_scream_ee.RotlibCollection_initAllocationUnderEnergyThreshold(self, *args)
    def getNextRotamersByELEnergy(self): return _py_scream_ee.RotlibCollection_getNextRotamersByELEnergy(self)
    def resetEmptyLatticeCrntPstn(self): return _py_scream_ee.RotlibCollection_resetEmptyLatticeCrntPstn(self)
    def resetTotalEnergyCrntPstn(self): return _py_scream_ee.RotlibCollection_resetTotalEnergyCrntPstn(self)
    def getNextEmptyLatticeExcitationRotamers(self): return _py_scream_ee.RotlibCollection_getNextEmptyLatticeExcitationRotamers(self)
    def getNextTotalEnergyExcitationRotamers(self): return _py_scream_ee.RotlibCollection_getNextTotalEnergyExcitationRotamers(self)
    def getNthEmptyLatticeExcitationRotamers(self): return _py_scream_ee.RotlibCollection_getNthEmptyLatticeExcitationRotamers(self)
    def getELExcitedRotamerFromEnumeration(self, *args): return _py_scream_ee.RotlibCollection_getELExcitedRotamerFromEnumeration(self, *args)
    def getELExcitedRotamer_nFromEnumeration_n(self, *args): return _py_scream_ee.RotlibCollection_getELExcitedRotamer_nFromEnumeration_n(self, *args)
    def getELEnumerationFromExcitedRotamer(self, *args): return _py_scream_ee.RotlibCollection_getELEnumerationFromExcitedRotamer(self, *args)
    def getELEnumeration_nFromExcitedRotamer_n(self, *args): return _py_scream_ee.RotlibCollection_getELEnumeration_nFromExcitedRotamer_n(self, *args)
    def _ExcitationEnumerationToExcitationEnumeration_n(self, *args): return _py_scream_ee.RotlibCollection__ExcitationEnumerationToExcitationEnumeration_n(self, *args)
    def _ExcitedRotamers_nToExcitedRotamers(self, *args): return _py_scream_ee.RotlibCollection__ExcitedRotamers_nToExcitedRotamers(self, *args)
    def getClashCollection(self): return _py_scream_ee.RotlibCollection_getClashCollection(self)
    def cleanClashCollection(self): return _py_scream_ee.RotlibCollection_cleanClashCollection(self)
    def getMutInfoRotlibMap(self): return _py_scream_ee.RotlibCollection_getMutInfoRotlibMap(self)
    def getMutInfoRotlibDict(self): return _py_scream_ee.RotlibCollection_getMutInfoRotlibDict(self)
    def getNextDynamicMemoryRotamers_And_Expand(self): return _py_scream_ee.RotlibCollection_getNextDynamicMemoryRotamers_And_Expand(self)
    def getNextDynamicClashEliminatedRotamers_And_Expand(self): return _py_scream_ee.RotlibCollection_getNextDynamicClashEliminatedRotamers_And_Expand(self)
    def increaseConfigurationsUnderEnergyThreshold(self, *args): return _py_scream_ee.RotlibCollection_increaseConfigurationsUnderEnergyThreshold(self, *args)
    def getNextUnderEnergyThresholdRotamers(self): return _py_scream_ee.RotlibCollection_getNextUnderEnergyThresholdRotamers(self)
    def setExcitationEnergy(self, *args): return _py_scream_ee.RotlibCollection_setExcitationEnergy(self, *args)
    def getExcitationEnergy(self, *args): return _py_scream_ee.RotlibCollection_getExcitationEnergy(self, *args)
    def printEmptyLatticeLinearEnergyTable(self): return _py_scream_ee.RotlibCollection_printEmptyLatticeLinearEnergyTable(self)
    def printExcitationEnergyTable(self, *args): return _py_scream_ee.RotlibCollection_printExcitationEnergyTable(self, *args)
    def printEmptyLatticeTable(self): return _py_scream_ee.RotlibCollection_printEmptyLatticeTable(self)
    def getInitMethod(self): return _py_scream_ee.RotlibCollection_getInitMethod(self)
    def sizeOfSystem(self): return _py_scream_ee.RotlibCollection_sizeOfSystem(self)
    def getHighestAllowedRotamerE(self): return _py_scream_ee.RotlibCollection_getHighestAllowedRotamerE(self)
    def setHighestAllowedRotamerE(self, *args): return _py_scream_ee.RotlibCollection_setHighestAllowedRotamerE(self, *args)
    __swig_setmethods__["maxRotamerConfigurations"] = _py_scream_ee.RotlibCollection_maxRotamerConfigurations_set
    __swig_getmethods__["maxRotamerConfigurations"] = _py_scream_ee.RotlibCollection_maxRotamerConfigurations_get
    if _newclass:maxRotamerConfigurations = _swig_property(_py_scream_ee.RotlibCollection_maxRotamerConfigurations_get, _py_scream_ee.RotlibCollection_maxRotamerConfigurations_set)
    def cmpMaxRotamerConfigurations(self, *args): return _py_scream_ee.RotlibCollection_cmpMaxRotamerConfigurations(self, *args)
RotlibCollection_swigregister = _py_scream_ee.RotlibCollection_swigregister
RotlibCollection_swigregister(RotlibCollection)

class ClashCollection(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClashCollection, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClashCollection, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _py_scream_ee.new_ClashCollection(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _py_scream_ee.delete_ClashCollection
    __del__ = lambda self : None;
    def setThresholdE(self, *args): return _py_scream_ee.ClashCollection_setThresholdE(self, *args)
    def addClashPair(self, *args): return _py_scream_ee.ClashCollection_addClashPair(self, *args)
    def checkClash(self, *args): return _py_scream_ee.ClashCollection_checkClash(self, *args)
    def getThresholdE(self): return _py_scream_ee.ClashCollection_getThresholdE(self)
    def getNumberOfClashes(self): return _py_scream_ee.ClashCollection_getNumberOfClashes(self)
    def storeCurrentRotamerConfiguration(self, *args): return _py_scream_ee.ClashCollection_storeCurrentRotamerConfiguration(self, *args)
    def increment_total_clashing_rotamers_eliminated(self): return _py_scream_ee.ClashCollection_increment_total_clashing_rotamers_eliminated(self)
    def set_total_clashing_rotamers_eliminated(self, *args): return _py_scream_ee.ClashCollection_set_total_clashing_rotamers_eliminated(self, *args)
    def get_total_clashing_rotamers_eliminated(self): return _py_scream_ee.ClashCollection_get_total_clashing_rotamers_eliminated(self)
    def getClashList(self): return _py_scream_ee.ClashCollection_getClashList(self)
    def getDiscreteClashPairList(self): return _py_scream_ee.ClashCollection_getDiscreteClashPairList(self)
ClashCollection_swigregister = _py_scream_ee.ClashCollection_swigregister
ClashCollection_swigregister(ClashCollection)

class RotamerNeighborList(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RotamerNeighborList, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RotamerNeighborList, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _py_scream_ee.new_RotamerNeighborList(*args)
        try: self.this.append(this)
        except: self.this = this
    def setCutoff(self, *args): return _py_scream_ee.RotamerNeighborList_setCutoff(self, *args)
    def getCutoff(self): return _py_scream_ee.RotamerNeighborList_getCutoff(self)
    def setProtein(self, *args): return _py_scream_ee.RotamerNeighborList_setProtein(self, *args)
    def getProtein(self): return _py_scream_ee.RotamerNeighborList_getProtein(self)
    def addMutInfoRotConnInfo(self, *args): return _py_scream_ee.RotamerNeighborList_addMutInfoRotConnInfo(self, *args)
    def initRotamerNeighborList(self): return _py_scream_ee.RotamerNeighborList_initRotamerNeighborList(self)
    def returnEmptyLatticeNeighborList(self, *args): return _py_scream_ee.RotamerNeighborList_returnEmptyLatticeNeighborList(self, *args)
    __swig_destroy__ = _py_scream_ee.delete_RotamerNeighborList
    __del__ = lambda self : None;
RotamerNeighborList_swigregister = _py_scream_ee.RotamerNeighborList_swigregister
RotamerNeighborList_swigregister(RotamerNeighborList)

class RotamerCluster(Rotamer):
    __swig_setmethods__ = {}
    for _s in [Rotamer]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, RotamerCluster, name, value)
    __swig_getmethods__ = {}
    for _s in [Rotamer]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, RotamerCluster, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _py_scream_ee.new_RotamerCluster(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _py_scream_ee.delete_RotamerCluster
    __del__ = lambda self : None;
    def addRotamerCluster(self, *args): return _py_scream_ee.RotamerCluster_addRotamerCluster(self, *args)
    def getAllRotamers(self): return _py_scream_ee.RotamerCluster_getAllRotamers(self)
    def print_Me(self): return _py_scream_ee.RotamerCluster_print_Me(self)
    def append_to_filehandle(self, *args): return _py_scream_ee.RotamerCluster_append_to_filehandle(self, *args)
    def pdb_append_to_filehandle(self, *args): return _py_scream_ee.RotamerCluster_pdb_append_to_filehandle(self, *args)
    def append_to_ostream_connect_info(self, *args): return _py_scream_ee.RotamerCluster_append_to_ostream_connect_info(self, *args)
    def get_sc_atoms(self): return _py_scream_ee.RotamerCluster_get_sc_atoms(self)
    def get_bb_atoms(self): return _py_scream_ee.RotamerCluster_get_bb_atoms(self)
RotamerCluster_swigregister = _py_scream_ee.RotamerCluster_swigregister
RotamerCluster_swigregister(RotamerCluster)

class RotConnInfo(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RotConnInfo, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RotConnInfo, name)
    __repr__ = _swig_repr
    __swig_setmethods__["targetRotamerLibFile"] = _py_scream_ee.RotConnInfo_targetRotamerLibFile_set
    __swig_getmethods__["targetRotamerLibFile"] = _py_scream_ee.RotConnInfo_targetRotamerLibFile_get
    if _newclass:targetRotamerLibFile = _swig_property(_py_scream_ee.RotConnInfo_targetRotamerLibFile_get, _py_scream_ee.RotConnInfo_targetRotamerLibFile_set)
    __swig_setmethods__["anchor_pts"] = _py_scream_ee.RotConnInfo_anchor_pts_set
    __swig_getmethods__["anchor_pts"] = _py_scream_ee.RotConnInfo_anchor_pts_get
    if _newclass:anchor_pts = _swig_property(_py_scream_ee.RotConnInfo_anchor_pts_get, _py_scream_ee.RotConnInfo_anchor_pts_set)
    __swig_setmethods__["atoms_of_exact_match"] = _py_scream_ee.RotConnInfo_atoms_of_exact_match_set
    __swig_getmethods__["atoms_of_exact_match"] = _py_scream_ee.RotConnInfo_atoms_of_exact_match_get
    if _newclass:atoms_of_exact_match = _swig_property(_py_scream_ee.RotConnInfo_atoms_of_exact_match_get, _py_scream_ee.RotConnInfo_atoms_of_exact_match_set)
    __swig_setmethods__["atom_n_map"] = _py_scream_ee.RotConnInfo_atom_n_map_set
    __swig_getmethods__["atom_n_map"] = _py_scream_ee.RotConnInfo_atom_n_map_get
    if _newclass:atom_n_map = _swig_property(_py_scream_ee.RotConnInfo_atom_n_map_get, _py_scream_ee.RotConnInfo_atom_n_map_set)
    __swig_setmethods__["atom_n_label_map"] = _py_scream_ee.RotConnInfo_atom_n_label_map_set
    __swig_getmethods__["atom_n_label_map"] = _py_scream_ee.RotConnInfo_atom_n_label_map_get
    if _newclass:atom_n_label_map = _swig_property(_py_scream_ee.RotConnInfo_atom_n_label_map_get, _py_scream_ee.RotConnInfo_atom_n_label_map_set)
    __swig_setmethods__["side_chain_atoms"] = _py_scream_ee.RotConnInfo_side_chain_atoms_set
    __swig_getmethods__["side_chain_atoms"] = _py_scream_ee.RotConnInfo_side_chain_atoms_get
    if _newclass:side_chain_atoms = _swig_property(_py_scream_ee.RotConnInfo_side_chain_atoms_get, _py_scream_ee.RotConnInfo_side_chain_atoms_set)
    __swig_setmethods__["atom_connectivity_info"] = _py_scream_ee.RotConnInfo_atom_connectivity_info_set
    __swig_getmethods__["atom_connectivity_info"] = _py_scream_ee.RotConnInfo_atom_connectivity_info_get
    if _newclass:atom_connectivity_info = _swig_property(_py_scream_ee.RotConnInfo_atom_connectivity_info_get, _py_scream_ee.RotConnInfo_atom_connectivity_info_set)
    __swig_setmethods__["connection_point_atoms"] = _py_scream_ee.RotConnInfo_connection_point_atoms_set
    __swig_getmethods__["connection_point_atoms"] = _py_scream_ee.RotConnInfo_connection_point_atoms_get
    if _newclass:connection_point_atoms = _swig_property(_py_scream_ee.RotConnInfo_connection_point_atoms_get, _py_scream_ee.RotConnInfo_connection_point_atoms_set)
    def modifyMappingInProteinAtoms(self, *args): return _py_scream_ee.RotConnInfo_modifyMappingInProteinAtoms(self, *args)
    def clear(self): return _py_scream_ee.RotConnInfo_clear(self)
    def __init__(self): 
        this = _py_scream_ee.new_RotConnInfo()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _py_scream_ee.delete_RotConnInfo
    __del__ = lambda self : None;
RotConnInfo_swigregister = _py_scream_ee.RotConnInfo_swigregister
RotConnInfo_swigregister(RotConnInfo)

class bgf_handler(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, bgf_handler, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, bgf_handler, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _py_scream_ee.new_bgf_handler(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _py_scream_ee.delete_bgf_handler
    __del__ = lambda self : None;
    def readfile(self, *args): return _py_scream_ee.bgf_handler_readfile(self, *args)
    def readPDB(self, *args): return _py_scream_ee.bgf_handler_readPDB(self, *args)
    def printToFile(self, *args): return _py_scream_ee.bgf_handler_printToFile(self, *args)
    def printfile(self, *args): return _py_scream_ee.bgf_handler_printfile(self, *args)
    def printPDB(self, *args): return _py_scream_ee.bgf_handler_printPDB(self, *args)
    def printToPDB(self, *args): return _py_scream_ee.bgf_handler_printToPDB(self, *args)
    def printSequenceToFile(self, *args): return _py_scream_ee.bgf_handler_printSequenceToFile(self, *args)
    def returnSequence(self): return _py_scream_ee.bgf_handler_returnSequence(self)
    __swig_getmethods__["printSequence"] = lambda x: _py_scream_ee.bgf_handler_printSequence
    if _newclass:printSequence = staticmethod(_py_scream_ee.bgf_handler_printSequence)
    def pass_atomlist(self, *args): return _py_scream_ee.bgf_handler_pass_atomlist(self, *args)
    def getAtomList(self): return _py_scream_ee.bgf_handler_getAtomList(self)
    __swig_setmethods__["atom_list"] = _py_scream_ee.bgf_handler_atom_list_set
    __swig_getmethods__["atom_list"] = _py_scream_ee.bgf_handler_atom_list_get
    if _newclass:atom_list = _swig_property(_py_scream_ee.bgf_handler_atom_list_get, _py_scream_ee.bgf_handler_atom_list_set)
    __swig_setmethods__["header_lines"] = _py_scream_ee.bgf_handler_header_lines_set
    __swig_getmethods__["header_lines"] = _py_scream_ee.bgf_handler_header_lines_get
    if _newclass:header_lines = _swig_property(_py_scream_ee.bgf_handler_header_lines_get, _py_scream_ee.bgf_handler_header_lines_set)
    __swig_setmethods__["atom_lines"] = _py_scream_ee.bgf_handler_atom_lines_set
    __swig_getmethods__["atom_lines"] = _py_scream_ee.bgf_handler_atom_lines_get
    if _newclass:atom_lines = _swig_property(_py_scream_ee.bgf_handler_atom_lines_get, _py_scream_ee.bgf_handler_atom_lines_set)
    __swig_setmethods__["conect_format_lines"] = _py_scream_ee.bgf_handler_conect_format_lines_set
    __swig_getmethods__["conect_format_lines"] = _py_scream_ee.bgf_handler_conect_format_lines_get
    if _newclass:conect_format_lines = _swig_property(_py_scream_ee.bgf_handler_conect_format_lines_get, _py_scream_ee.bgf_handler_conect_format_lines_set)
    __swig_setmethods__["connectivity_record_lines"] = _py_scream_ee.bgf_handler_connectivity_record_lines_set
    __swig_getmethods__["connectivity_record_lines"] = _py_scream_ee.bgf_handler_connectivity_record_lines_get
    if _newclass:connectivity_record_lines = _swig_property(_py_scream_ee.bgf_handler_connectivity_record_lines_get, _py_scream_ee.bgf_handler_connectivity_record_lines_set)
bgf_handler_swigregister = _py_scream_ee.bgf_handler_swigregister
bgf_handler_swigregister(bgf_handler)

def bgf_handler_printSequence(*args):
  return _py_scream_ee.bgf_handler_printSequence(*args)
bgf_handler_printSequence = _py_scream_ee.bgf_handler_printSequence

class AminoAcid_RTF(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, AminoAcid_RTF, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, AminoAcid_RTF, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _py_scream_ee.new_AminoAcid_RTF(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _py_scream_ee.delete_AminoAcid_RTF
    __del__ = lambda self : None;
    def get_ff_type(self, *args): return _py_scream_ee.AminoAcid_RTF_get_ff_type(self, *args)
    def return_bonds_table(self): return _py_scream_ee.AminoAcid_RTF_return_bonds_table(self)
AminoAcid_RTF_swigregister = _py_scream_ee.AminoAcid_RTF_swigregister
AminoAcid_RTF_swigregister(AminoAcid_RTF)

class SCREAM_RTF(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, SCREAM_RTF, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, SCREAM_RTF, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _py_scream_ee.new_SCREAM_RTF(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _py_scream_ee.delete_SCREAM_RTF
    __del__ = lambda self : None;
    def get_AminoAcid_RTF(self, *args): return _py_scream_ee.SCREAM_RTF_get_AminoAcid_RTF(self, *args)
    def get_ff_type(self, *args): return _py_scream_ee.SCREAM_RTF_get_ff_type(self, *args)
SCREAM_RTF_swigregister = _py_scream_ee.SCREAM_RTF_swigregister
SCREAM_RTF_swigregister(SCREAM_RTF)

class Scream_EE(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Scream_EE, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Scream_EE, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _py_scream_ee.new_Scream_EE()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _py_scream_ee.delete_Scream_EE
    __del__ = lambda self : None;
    def init(self, *args): return _py_scream_ee.Scream_EE_init(self, *args)
    def setCalcNonPolarHydrogen_flag(self, *args): return _py_scream_ee.Scream_EE_setCalcNonPolarHydrogen_flag(self, *args)
    def getCalcNonPolarHydrogen_flag(self): return _py_scream_ee.Scream_EE_getCalcNonPolarHydrogen_flag(self)
    def addMutInfoRotConnInfo(self, *args): return _py_scream_ee.Scream_EE_addMutInfoRotConnInfo(self, *args)
    def init_after_addedMutInfoRotConnInfo(self, *args): return _py_scream_ee.Scream_EE_init_after_addedMutInfoRotConnInfo(self, *args)
    def init_after_addedMutInfoRotConnInfo_on_the_fly_E(self, *args): return _py_scream_ee.Scream_EE_init_after_addedMutInfoRotConnInfo_on_the_fly_E(self, *args)
    def init_after_addedMutInfoRotConnInfo_neighbor_list(self, *args): return _py_scream_ee.Scream_EE_init_after_addedMutInfoRotConnInfo_neighbor_list(self, *args)
    def fix_mutInfo(self, *args): return _py_scream_ee.Scream_EE_fix_mutInfo(self, *args)
    def moveable_mutInfo(self, *args): return _py_scream_ee.Scream_EE_moveable_mutInfo(self, *args)
    def fix_all(self): return _py_scream_ee.Scream_EE_fix_all(self)
    def visible_mutInfo(self, *args): return _py_scream_ee.Scream_EE_visible_mutInfo(self, *args)
    def invisible_mutInfo(self, *args): return _py_scream_ee.Scream_EE_invisible_mutInfo(self, *args)
    def visible_EL_mutInfo(self, *args): return _py_scream_ee.Scream_EE_visible_EL_mutInfo(self, *args)
    def invisible_EL_mutInfo(self, *args): return _py_scream_ee.Scream_EE_invisible_EL_mutInfo(self, *args)
    def visible_all(self): return _py_scream_ee.Scream_EE_visible_all(self)
    def invisible_all(self): return _py_scream_ee.Scream_EE_invisible_all(self)
    def visible_EL_all(self): return _py_scream_ee.Scream_EE_visible_EL_all(self)
    def invisible_EL_all(self): return _py_scream_ee.Scream_EE_invisible_EL_all(self)
    def make_chain_invisible(self, *args): return _py_scream_ee.Scream_EE_make_chain_invisible(self, *args)
    def make_chain_EL_invisible(self, *args): return _py_scream_ee.Scream_EE_make_chain_EL_invisible(self, *args)
    def resetFlags(self, arg0 = 0): return _py_scream_ee.Scream_EE_resetFlags(self, arg0)
    def setup_variableAtomsOnEachSidechain(self): return _py_scream_ee.Scream_EE_setup_variableAtomsOnEachSidechain(self)
    def initScreamAtomDeltaValue(self, *args): return _py_scream_ee.Scream_EE_initScreamAtomDeltaValue(self, *args)
    def initScreamAtomVdwHbFields(self): return _py_scream_ee.Scream_EE_initScreamAtomVdwHbFields(self)
    def addClashCollection(self, *args): return _py_scream_ee.Scream_EE_addClashCollection(self, *args)
    def cleanClashCollection(self): return _py_scream_ee.Scream_EE_cleanClashCollection(self)
    def getDistanceDielectricPrefactor(self): return _py_scream_ee.Scream_EE_getDistanceDielectricPrefactor(self)
    def setDistanceDielectricPrefactor(self, *args): return _py_scream_ee.Scream_EE_setDistanceDielectricPrefactor(self, *args)
    def setNormalDielectric(self, *args): return _py_scream_ee.Scream_EE_setNormalDielectric(self, *args)
    def ntrlRotamerPlacement(self, *args): return _py_scream_ee.Scream_EE_ntrlRotamerPlacement(self, *args)
    __swig_setmethods__["coulomb_obj"] = _py_scream_ee.Scream_EE_coulomb_obj_set
    __swig_getmethods__["coulomb_obj"] = _py_scream_ee.Scream_EE_coulomb_obj_get
    if _newclass:coulomb_obj = _swig_property(_py_scream_ee.Scream_EE_coulomb_obj_get, _py_scream_ee.Scream_EE_coulomb_obj_set)
    __swig_setmethods__["vdw_obj"] = _py_scream_ee.Scream_EE_vdw_obj_set
    __swig_getmethods__["vdw_obj"] = _py_scream_ee.Scream_EE_vdw_obj_get
    if _newclass:vdw_obj = _swig_property(_py_scream_ee.Scream_EE_vdw_obj_get, _py_scream_ee.Scream_EE_vdw_obj_set)
    __swig_setmethods__["hb_obj"] = _py_scream_ee.Scream_EE_hb_obj_set
    __swig_getmethods__["hb_obj"] = _py_scream_ee.Scream_EE_hb_obj_get
    if _newclass:hb_obj = _swig_property(_py_scream_ee.Scream_EE_hb_obj_get, _py_scream_ee.Scream_EE_hb_obj_set)
    __swig_setmethods__["coulomb_EE"] = _py_scream_ee.Scream_EE_coulomb_EE_set
    __swig_getmethods__["coulomb_EE"] = _py_scream_ee.Scream_EE_coulomb_EE_get
    if _newclass:coulomb_EE = _swig_property(_py_scream_ee.Scream_EE_coulomb_EE_get, _py_scream_ee.Scream_EE_coulomb_EE_set)
    __swig_setmethods__["vdw_EE"] = _py_scream_ee.Scream_EE_vdw_EE_set
    __swig_getmethods__["vdw_EE"] = _py_scream_ee.Scream_EE_vdw_EE_get
    if _newclass:vdw_EE = _swig_property(_py_scream_ee.Scream_EE_vdw_EE_get, _py_scream_ee.Scream_EE_vdw_EE_set)
    __swig_setmethods__["hb_EE"] = _py_scream_ee.Scream_EE_hb_EE_set
    __swig_getmethods__["hb_EE"] = _py_scream_ee.Scream_EE_hb_EE_get
    if _newclass:hb_EE = _swig_property(_py_scream_ee.Scream_EE_hb_EE_get, _py_scream_ee.Scream_EE_hb_EE_set)
    __swig_setmethods__["vdw_hb_exclusion_EE"] = _py_scream_ee.Scream_EE_vdw_hb_exclusion_EE_set
    __swig_getmethods__["vdw_hb_exclusion_EE"] = _py_scream_ee.Scream_EE_vdw_hb_exclusion_EE_get
    if _newclass:vdw_hb_exclusion_EE = _swig_property(_py_scream_ee.Scream_EE_vdw_hb_exclusion_EE_get, _py_scream_ee.Scream_EE_vdw_hb_exclusion_EE_set)
    def calc_empty_lattice_E(self, *args): return _py_scream_ee.Scream_EE_calc_empty_lattice_E(self, *args)
    def calc_empty_lattice_E_full_delta(self, *args): return _py_scream_ee.Scream_EE_calc_empty_lattice_E_full_delta(self, *args)
    def calc_empty_lattice_E_flat_delta(self, *args): return _py_scream_ee.Scream_EE_calc_empty_lattice_E_flat_delta(self, *args)
    def calc_empty_lattice_E_scaled_inner_wall(self, *args): return _py_scream_ee.Scream_EE_calc_empty_lattice_E_scaled_inner_wall(self, *args)
    def calc_empty_lattice_coulomb_E_delta(self, *args): return _py_scream_ee.Scream_EE_calc_empty_lattice_coulomb_E_delta(self, *args)
    def calc_empty_lattice_vdw_E_delta(self, *args): return _py_scream_ee.Scream_EE_calc_empty_lattice_vdw_E_delta(self, *args)
    def calc_empty_lattice_hb_E_delta(self, *args): return _py_scream_ee.Scream_EE_calc_empty_lattice_hb_E_delta(self, *args)
    def calc_empty_lattice_vdw_hb_exclusion_E_delta(self, *args): return _py_scream_ee.Scream_EE_calc_empty_lattice_vdw_hb_exclusion_E_delta(self, *args)
    def calc_EL_vdw_rot_selfBB(self, *args): return _py_scream_ee.Scream_EE_calc_EL_vdw_rot_selfBB(self, *args)
    def calc_EL_vdw_rot_otherBB(self, *args): return _py_scream_ee.Scream_EE_calc_EL_vdw_rot_otherBB(self, *args)
    def calc_EL_vdw_rot_fixedSC(self, *args): return _py_scream_ee.Scream_EE_calc_EL_vdw_rot_fixedSC(self, *args)
    def calc_EL_vdw_rot_fixedHET(self, *args): return _py_scream_ee.Scream_EE_calc_EL_vdw_rot_fixedHET(self, *args)
    def calc_EL_vdw_rot_moveableHET(self, *args): return _py_scream_ee.Scream_EE_calc_EL_vdw_rot_moveableHET(self, *args)
    def calc_EL_coulomb_rot_selfBB(self, *args): return _py_scream_ee.Scream_EE_calc_EL_coulomb_rot_selfBB(self, *args)
    def calc_EL_coulomb_rot_otherBB(self, *args): return _py_scream_ee.Scream_EE_calc_EL_coulomb_rot_otherBB(self, *args)
    def calc_EL_coulomb_rot_fixedSC(self, *args): return _py_scream_ee.Scream_EE_calc_EL_coulomb_rot_fixedSC(self, *args)
    def calc_EL_coulomb_rot_fixedHET(self, *args): return _py_scream_ee.Scream_EE_calc_EL_coulomb_rot_fixedHET(self, *args)
    def calc_EL_coulomb_rot_moveableHET(self, *args): return _py_scream_ee.Scream_EE_calc_EL_coulomb_rot_moveableHET(self, *args)
    def calc_EL_hb_rot_selfBB(self, *args): return _py_scream_ee.Scream_EE_calc_EL_hb_rot_selfBB(self, *args)
    def calc_EL_hb_rot_otherBB(self, *args): return _py_scream_ee.Scream_EE_calc_EL_hb_rot_otherBB(self, *args)
    def calc_EL_hb_rot_fixedSC(self, *args): return _py_scream_ee.Scream_EE_calc_EL_hb_rot_fixedSC(self, *args)
    def calc_EL_hb_rot_fixedHET(self, *args): return _py_scream_ee.Scream_EE_calc_EL_hb_rot_fixedHET(self, *args)
    def calc_EL_hb_rot_moveableHET(self, *args): return _py_scream_ee.Scream_EE_calc_EL_hb_rot_moveableHET(self, *args)
    def calc_all_interaction_E(self): return _py_scream_ee.Scream_EE_calc_all_interaction_E(self)
    def calc_all_interaction_E_full_delta(self, *args): return _py_scream_ee.Scream_EE_calc_all_interaction_E_full_delta(self, *args)
    def calc_all_interaction_E_flat_delta(self, *args): return _py_scream_ee.Scream_EE_calc_all_interaction_E_flat_delta(self, *args)
    def calc_all_interaction_coulomb_E_delta(self): return _py_scream_ee.Scream_EE_calc_all_interaction_coulomb_E_delta(self)
    def calc_all_interaction_vdw_E_delta(self, *args): return _py_scream_ee.Scream_EE_calc_all_interaction_vdw_E_delta(self, *args)
    def calc_all_interaction_hb_E_delta(self, *args): return _py_scream_ee.Scream_EE_calc_all_interaction_hb_E_delta(self, *args)
    def calc_all_interaction_vdw_hb_exclusion_E_delta(self, *args): return _py_scream_ee.Scream_EE_calc_all_interaction_vdw_hb_exclusion_E_delta(self, *args)
    def calc_residue_interaction_E(self, *args): return _py_scream_ee.Scream_EE_calc_residue_interaction_E(self, *args)
    def calc_residue_interaction_vdw_E(self, *args): return _py_scream_ee.Scream_EE_calc_residue_interaction_vdw_E(self, *args)
    def calc_residue_interaction_hb_E(self, *args): return _py_scream_ee.Scream_EE_calc_residue_interaction_hb_E(self, *args)
    def calc_residue_interaction_coulumb_E(self, *args): return _py_scream_ee.Scream_EE_calc_residue_interaction_coulumb_E(self, *args)
    def setProtein(self, *args): return _py_scream_ee.Scream_EE_setProtein(self, *args)
    def getProtein(self): return _py_scream_ee.Scream_EE_getProtein(self)
    __swig_setmethods__["ptn"] = _py_scream_ee.Scream_EE_ptn_set
    __swig_getmethods__["ptn"] = _py_scream_ee.Scream_EE_ptn_get
    if _newclass:ptn = _swig_property(_py_scream_ee.Scream_EE_ptn_get, _py_scream_ee.Scream_EE_ptn_set)
    __swig_setmethods__["mutInfoV"] = _py_scream_ee.Scream_EE_mutInfoV_set
    __swig_getmethods__["mutInfoV"] = _py_scream_ee.Scream_EE_mutInfoV_get
    if _newclass:mutInfoV = _swig_property(_py_scream_ee.Scream_EE_mutInfoV_get, _py_scream_ee.Scream_EE_mutInfoV_set)
Scream_EE_swigregister = _py_scream_ee.Scream_EE_swigregister
Scream_EE_swigregister(Scream_EE)

class MutInfo(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MutInfo, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MutInfo, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _py_scream_ee.new_MutInfo(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _py_scream_ee.delete_MutInfo
    __del__ = lambda self : None;
    def init(self, *args): return _py_scream_ee.MutInfo_init(self, *args)
    def addMutInfo(self, *args): return _py_scream_ee.MutInfo_addMutInfo(self, *args)
    def __eq__(self, *args): return _py_scream_ee.MutInfo___eq__(self, *args)
    def __lt__(self, *args): return _py_scream_ee.MutInfo___lt__(self, *args)
    def getChn(self): return _py_scream_ee.MutInfo_getChn(self)
    def getPstn(self): return _py_scream_ee.MutInfo_getPstn(self)
    def getAA(self): return _py_scream_ee.MutInfo_getAA(self)
    __swig_setmethods__["chn"] = _py_scream_ee.MutInfo_chn_set
    __swig_getmethods__["chn"] = _py_scream_ee.MutInfo_chn_get
    if _newclass:chn = _swig_property(_py_scream_ee.MutInfo_chn_get, _py_scream_ee.MutInfo_chn_set)
    __swig_setmethods__["pstn"] = _py_scream_ee.MutInfo_pstn_set
    __swig_getmethods__["pstn"] = _py_scream_ee.MutInfo_pstn_get
    if _newclass:pstn = _swig_property(_py_scream_ee.MutInfo_pstn_get, _py_scream_ee.MutInfo_pstn_set)
    __swig_setmethods__["AA"] = _py_scream_ee.MutInfo_AA_set
    __swig_getmethods__["AA"] = _py_scream_ee.MutInfo_AA_get
    if _newclass:AA = _swig_property(_py_scream_ee.MutInfo_AA_get, _py_scream_ee.MutInfo_AA_set)
    __swig_setmethods__["str"] = _py_scream_ee.MutInfo_str_set
    __swig_getmethods__["str"] = _py_scream_ee.MutInfo_str_get
    if _newclass:str = _swig_property(_py_scream_ee.MutInfo_str_get, _py_scream_ee.MutInfo_str_set)
    __swig_setmethods__["mIInt"] = _py_scream_ee.MutInfo_mIInt_set
    __swig_getmethods__["mIInt"] = _py_scream_ee.MutInfo_mIInt_get
    if _newclass:mIInt = _swig_property(_py_scream_ee.MutInfo_mIInt_get, _py_scream_ee.MutInfo_mIInt_set)
    def print_Me(self): return _py_scream_ee.MutInfo_print_Me(self)
    def getString(self): return _py_scream_ee.MutInfo_getString(self)
    def getAllMutInfos(self): return _py_scream_ee.MutInfo_getAllMutInfos(self)
    def setIndex(self, *args): return _py_scream_ee.MutInfo_setIndex(self, *args)
    def getIndex(self): return _py_scream_ee.MutInfo_getIndex(self)
    def setRotConnInfo(self, *args): return _py_scream_ee.MutInfo_setRotConnInfo(self, *args)
    def getRotConnInfo(self): return _py_scream_ee.MutInfo_getRotConnInfo(self)
    def getMutInfoStringWithRotConnInfo(self): return _py_scream_ee.MutInfo_getMutInfoStringWithRotConnInfo(self)
    def searchAndAddRotConnInfo(self, *args): return _py_scream_ee.MutInfo_searchAndAddRotConnInfo(self, *args)
    def isClusterMutInfo(self): return _py_scream_ee.MutInfo_isClusterMutInfo(self)
MutInfo_swigregister = _py_scream_ee.MutInfo_swigregister
MutInfo_swigregister(MutInfo)

class MutInfoPair(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MutInfoPair, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MutInfoPair, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _py_scream_ee.new_MutInfoPair(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _py_scream_ee.delete_MutInfoPair
    __del__ = lambda self : None;
    def init(self, *args): return _py_scream_ee.MutInfoPair_init(self, *args)
    def __eq__(self, *args): return _py_scream_ee.MutInfoPair___eq__(self, *args)
    def __lt__(self, *args): return _py_scream_ee.MutInfoPair___lt__(self, *args)
    def getString(self): return _py_scream_ee.MutInfoPair_getString(self)
    __swig_setmethods__["mutInfo1"] = _py_scream_ee.MutInfoPair_mutInfo1_set
    __swig_getmethods__["mutInfo1"] = _py_scream_ee.MutInfoPair_mutInfo1_get
    if _newclass:mutInfo1 = _swig_property(_py_scream_ee.MutInfoPair_mutInfo1_get, _py_scream_ee.MutInfoPair_mutInfo1_set)
    __swig_setmethods__["mutInfo2"] = _py_scream_ee.MutInfoPair_mutInfo2_set
    __swig_getmethods__["mutInfo2"] = _py_scream_ee.MutInfoPair_mutInfo2_get
    if _newclass:mutInfo2 = _swig_property(_py_scream_ee.MutInfoPair_mutInfo2_get, _py_scream_ee.MutInfoPair_mutInfo2_set)
    def getMutInfo1(self): return _py_scream_ee.MutInfoPair_getMutInfo1(self)
    def getMutInfo2(self): return _py_scream_ee.MutInfoPair_getMutInfo2(self)
    def setClashE(self, *args): return _py_scream_ee.MutInfoPair_setClashE(self, *args)
    def getClashE(self): return _py_scream_ee.MutInfoPair_getClashE(self)
MutInfoPair_swigregister = _py_scream_ee.MutInfoPair_swigregister
MutInfoPair_swigregister(MutInfoPair)

class ConnectivityMap(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ConnectivityMap, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ConnectivityMap, name)
    __repr__ = _swig_repr
    def iterator(self): return _py_scream_ee.ConnectivityMap_iterator(self)
    def __iter__(self): return self.iterator()
    def __nonzero__(self): return _py_scream_ee.ConnectivityMap___nonzero__(self)
    def __bool__(self): return _py_scream_ee.ConnectivityMap___bool__(self)
    def __len__(self): return _py_scream_ee.ConnectivityMap___len__(self)
    def __getitem__(self, *args): return _py_scream_ee.ConnectivityMap___getitem__(self, *args)
    def __delitem__(self, *args): return _py_scream_ee.ConnectivityMap___delitem__(self, *args)
    def has_key(self, *args): return _py_scream_ee.ConnectivityMap_has_key(self, *args)
    def keys(self): return _py_scream_ee.ConnectivityMap_keys(self)
    def values(self): return _py_scream_ee.ConnectivityMap_values(self)
    def items(self): return _py_scream_ee.ConnectivityMap_items(self)
    def __contains__(self, *args): return _py_scream_ee.ConnectivityMap___contains__(self, *args)
    def key_iterator(self): return _py_scream_ee.ConnectivityMap_key_iterator(self)
    def value_iterator(self): return _py_scream_ee.ConnectivityMap_value_iterator(self)
    def __iter__(self): return self.key_iterator()
    def iterkeys(self): return self.key_iterator()
    def itervalues(self): return self.value_iterator()
    def iteritems(self): return self.iterator()
    def __setitem__(self, *args): return _py_scream_ee.ConnectivityMap___setitem__(self, *args)
    def __init__(self, *args): 
        this = _py_scream_ee.new_ConnectivityMap(*args)
        try: self.this.append(this)
        except: self.this = this
    def empty(self): return _py_scream_ee.ConnectivityMap_empty(self)
    def size(self): return _py_scream_ee.ConnectivityMap_size(self)
    def clear(self): return _py_scream_ee.ConnectivityMap_clear(self)
    def swap(self, *args): return _py_scream_ee.ConnectivityMap_swap(self, *args)
    def get_allocator(self): return _py_scream_ee.ConnectivityMap_get_allocator(self)
    def begin(self): return _py_scream_ee.ConnectivityMap_begin(self)
    def end(self): return _py_scream_ee.ConnectivityMap_end(self)
    def rbegin(self): return _py_scream_ee.ConnectivityMap_rbegin(self)
    def rend(self): return _py_scream_ee.ConnectivityMap_rend(self)
    def count(self, *args): return _py_scream_ee.ConnectivityMap_count(self, *args)
    def erase(self, *args): return _py_scream_ee.ConnectivityMap_erase(self, *args)
    def find(self, *args): return _py_scream_ee.ConnectivityMap_find(self, *args)
    def lower_bound(self, *args): return _py_scream_ee.ConnectivityMap_lower_bound(self, *args)
    def upper_bound(self, *args): return _py_scream_ee.ConnectivityMap_upper_bound(self, *args)
    __swig_destroy__ = _py_scream_ee.delete_ConnectivityMap
    __del__ = lambda self : None;
ConnectivityMap_swigregister = _py_scream_ee.ConnectivityMap_swigregister
ConnectivityMap_swigregister(ConnectivityMap)

class stringV(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, stringV, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, stringV, name)
    __repr__ = _swig_repr
    def iterator(self): return _py_scream_ee.stringV_iterator(self)
    def __iter__(self): return self.iterator()
    def __nonzero__(self): return _py_scream_ee.stringV___nonzero__(self)
    def __bool__(self): return _py_scream_ee.stringV___bool__(self)
    def __len__(self): return _py_scream_ee.stringV___len__(self)
    def pop(self): return _py_scream_ee.stringV_pop(self)
    def __getslice__(self, *args): return _py_scream_ee.stringV___getslice__(self, *args)
    def __setslice__(self, *args): return _py_scream_ee.stringV___setslice__(self, *args)
    def __delslice__(self, *args): return _py_scream_ee.stringV___delslice__(self, *args)
    def __delitem__(self, *args): return _py_scream_ee.stringV___delitem__(self, *args)
    def __getitem__(self, *args): return _py_scream_ee.stringV___getitem__(self, *args)
    def __setitem__(self, *args): return _py_scream_ee.stringV___setitem__(self, *args)
    def append(self, *args): return _py_scream_ee.stringV_append(self, *args)
    def empty(self): return _py_scream_ee.stringV_empty(self)
    def size(self): return _py_scream_ee.stringV_size(self)
    def clear(self): return _py_scream_ee.stringV_clear(self)
    def swap(self, *args): return _py_scream_ee.stringV_swap(self, *args)
    def get_allocator(self): return _py_scream_ee.stringV_get_allocator(self)
    def begin(self): return _py_scream_ee.stringV_begin(self)
    def end(self): return _py_scream_ee.stringV_end(self)
    def rbegin(self): return _py_scream_ee.stringV_rbegin(self)
    def rend(self): return _py_scream_ee.stringV_rend(self)
    def pop_back(self): return _py_scream_ee.stringV_pop_back(self)
    def erase(self, *args): return _py_scream_ee.stringV_erase(self, *args)
    def __init__(self, *args): 
        this = _py_scream_ee.new_stringV(*args)
        try: self.this.append(this)
        except: self.this = this
    def push_back(self, *args): return _py_scream_ee.stringV_push_back(self, *args)
    def front(self): return _py_scream_ee.stringV_front(self)
    def back(self): return _py_scream_ee.stringV_back(self)
    def assign(self, *args): return _py_scream_ee.stringV_assign(self, *args)
    def resize(self, *args): return _py_scream_ee.stringV_resize(self, *args)
    def insert(self, *args): return _py_scream_ee.stringV_insert(self, *args)
    def reserve(self, *args): return _py_scream_ee.stringV_reserve(self, *args)
    def capacity(self): return _py_scream_ee.stringV_capacity(self)
    __swig_destroy__ = _py_scream_ee.delete_stringV
    __del__ = lambda self : None;
stringV_swigregister = _py_scream_ee.stringV_swigregister
stringV_swigregister(stringV)

class ExcitationEnumeration(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ExcitationEnumeration, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ExcitationEnumeration, name)
    __repr__ = _swig_repr
    def iterator(self): return _py_scream_ee.ExcitationEnumeration_iterator(self)
    def __iter__(self): return self.iterator()
    def __nonzero__(self): return _py_scream_ee.ExcitationEnumeration___nonzero__(self)
    def __bool__(self): return _py_scream_ee.ExcitationEnumeration___bool__(self)
    def __len__(self): return _py_scream_ee.ExcitationEnumeration___len__(self)
    def __getitem__(self, *args): return _py_scream_ee.ExcitationEnumeration___getitem__(self, *args)
    def __delitem__(self, *args): return _py_scream_ee.ExcitationEnumeration___delitem__(self, *args)
    def has_key(self, *args): return _py_scream_ee.ExcitationEnumeration_has_key(self, *args)
    def keys(self): return _py_scream_ee.ExcitationEnumeration_keys(self)
    def values(self): return _py_scream_ee.ExcitationEnumeration_values(self)
    def items(self): return _py_scream_ee.ExcitationEnumeration_items(self)
    def __contains__(self, *args): return _py_scream_ee.ExcitationEnumeration___contains__(self, *args)
    def key_iterator(self): return _py_scream_ee.ExcitationEnumeration_key_iterator(self)
    def value_iterator(self): return _py_scream_ee.ExcitationEnumeration_value_iterator(self)
    def __iter__(self): return self.key_iterator()
    def iterkeys(self): return self.key_iterator()
    def itervalues(self): return self.value_iterator()
    def iteritems(self): return self.iterator()
    def __setitem__(self, *args): return _py_scream_ee.ExcitationEnumeration___setitem__(self, *args)
    def __init__(self, *args): 
        this = _py_scream_ee.new_ExcitationEnumeration(*args)
        try: self.this.append(this)
        except: self.this = this
    def empty(self): return _py_scream_ee.ExcitationEnumeration_empty(self)
    def size(self): return _py_scream_ee.ExcitationEnumeration_size(self)
    def clear(self): return _py_scream_ee.ExcitationEnumeration_clear(self)
    def swap(self, *args): return _py_scream_ee.ExcitationEnumeration_swap(self, *args)
    def get_allocator(self): return _py_scream_ee.ExcitationEnumeration_get_allocator(self)
    def begin(self): return _py_scream_ee.ExcitationEnumeration_begin(self)
    def end(self): return _py_scream_ee.ExcitationEnumeration_end(self)
    def rbegin(self): return _py_scream_ee.ExcitationEnumeration_rbegin(self)
    def rend(self): return _py_scream_ee.ExcitationEnumeration_rend(self)
    def count(self, *args): return _py_scream_ee.ExcitationEnumeration_count(self, *args)
    def erase(self, *args): return _py_scream_ee.ExcitationEnumeration_erase(self, *args)
    def find(self, *args): return _py_scream_ee.ExcitationEnumeration_find(self, *args)
    def lower_bound(self, *args): return _py_scream_ee.ExcitationEnumeration_lower_bound(self, *args)
    def upper_bound(self, *args): return _py_scream_ee.ExcitationEnumeration_upper_bound(self, *args)
    __swig_destroy__ = _py_scream_ee.delete_ExcitationEnumeration
    __del__ = lambda self : None;
ExcitationEnumeration_swigregister = _py_scream_ee.ExcitationEnumeration_swigregister
ExcitationEnumeration_swigregister(ExcitationEnumeration)

class ExcitedRotamers(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ExcitedRotamers, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ExcitedRotamers, name)
    __repr__ = _swig_repr
    def iterator(self): return _py_scream_ee.ExcitedRotamers_iterator(self)
    def __iter__(self): return self.iterator()
    def __nonzero__(self): return _py_scream_ee.ExcitedRotamers___nonzero__(self)
    def __bool__(self): return _py_scream_ee.ExcitedRotamers___bool__(self)
    def __len__(self): return _py_scream_ee.ExcitedRotamers___len__(self)
    def __getitem__(self, *args): return _py_scream_ee.ExcitedRotamers___getitem__(self, *args)
    def __delitem__(self, *args): return _py_scream_ee.ExcitedRotamers___delitem__(self, *args)
    def has_key(self, *args): return _py_scream_ee.ExcitedRotamers_has_key(self, *args)
    def keys(self): return _py_scream_ee.ExcitedRotamers_keys(self)
    def values(self): return _py_scream_ee.ExcitedRotamers_values(self)
    def items(self): return _py_scream_ee.ExcitedRotamers_items(self)
    def __contains__(self, *args): return _py_scream_ee.ExcitedRotamers___contains__(self, *args)
    def key_iterator(self): return _py_scream_ee.ExcitedRotamers_key_iterator(self)
    def value_iterator(self): return _py_scream_ee.ExcitedRotamers_value_iterator(self)
    def __iter__(self): return self.key_iterator()
    def iterkeys(self): return self.key_iterator()
    def itervalues(self): return self.value_iterator()
    def iteritems(self): return self.iterator()
    def __setitem__(self, *args): return _py_scream_ee.ExcitedRotamers___setitem__(self, *args)
    def __init__(self, *args): 
        this = _py_scream_ee.new_ExcitedRotamers(*args)
        try: self.this.append(this)
        except: self.this = this
    def empty(self): return _py_scream_ee.ExcitedRotamers_empty(self)
    def size(self): return _py_scream_ee.ExcitedRotamers_size(self)
    def clear(self): return _py_scream_ee.ExcitedRotamers_clear(self)
    def swap(self, *args): return _py_scream_ee.ExcitedRotamers_swap(self, *args)
    def get_allocator(self): return _py_scream_ee.ExcitedRotamers_get_allocator(self)
    def begin(self): return _py_scream_ee.ExcitedRotamers_begin(self)
    def end(self): return _py_scream_ee.ExcitedRotamers_end(self)
    def rbegin(self): return _py_scream_ee.ExcitedRotamers_rbegin(self)
    def rend(self): return _py_scream_ee.ExcitedRotamers_rend(self)
    def count(self, *args): return _py_scream_ee.ExcitedRotamers_count(self, *args)
    def erase(self, *args): return _py_scream_ee.ExcitedRotamers_erase(self, *args)
    def find(self, *args): return _py_scream_ee.ExcitedRotamers_find(self, *args)
    def lower_bound(self, *args): return _py_scream_ee.ExcitedRotamers_lower_bound(self, *args)
    def upper_bound(self, *args): return _py_scream_ee.ExcitedRotamers_upper_bound(self, *args)
    __swig_destroy__ = _py_scream_ee.delete_ExcitedRotamers
    __del__ = lambda self : None;
ExcitedRotamers_swigregister = _py_scream_ee.ExcitedRotamers_swigregister
ExcitedRotamers_swigregister(ExcitedRotamers)

class RotamerV(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RotamerV, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RotamerV, name)
    __repr__ = _swig_repr
    def iterator(self): return _py_scream_ee.RotamerV_iterator(self)
    def __iter__(self): return self.iterator()
    def __nonzero__(self): return _py_scream_ee.RotamerV___nonzero__(self)
    def __bool__(self): return _py_scream_ee.RotamerV___bool__(self)
    def __len__(self): return _py_scream_ee.RotamerV___len__(self)
    def pop(self): return _py_scream_ee.RotamerV_pop(self)
    def __getslice__(self, *args): return _py_scream_ee.RotamerV___getslice__(self, *args)
    def __setslice__(self, *args): return _py_scream_ee.RotamerV___setslice__(self, *args)
    def __delslice__(self, *args): return _py_scream_ee.RotamerV___delslice__(self, *args)
    def __delitem__(self, *args): return _py_scream_ee.RotamerV___delitem__(self, *args)
    def __getitem__(self, *args): return _py_scream_ee.RotamerV___getitem__(self, *args)
    def __setitem__(self, *args): return _py_scream_ee.RotamerV___setitem__(self, *args)
    def append(self, *args): return _py_scream_ee.RotamerV_append(self, *args)
    def empty(self): return _py_scream_ee.RotamerV_empty(self)
    def size(self): return _py_scream_ee.RotamerV_size(self)
    def clear(self): return _py_scream_ee.RotamerV_clear(self)
    def swap(self, *args): return _py_scream_ee.RotamerV_swap(self, *args)
    def get_allocator(self): return _py_scream_ee.RotamerV_get_allocator(self)
    def begin(self): return _py_scream_ee.RotamerV_begin(self)
    def end(self): return _py_scream_ee.RotamerV_end(self)
    def rbegin(self): return _py_scream_ee.RotamerV_rbegin(self)
    def rend(self): return _py_scream_ee.RotamerV_rend(self)
    def pop_back(self): return _py_scream_ee.RotamerV_pop_back(self)
    def erase(self, *args): return _py_scream_ee.RotamerV_erase(self, *args)
    def __init__(self, *args): 
        this = _py_scream_ee.new_RotamerV(*args)
        try: self.this.append(this)
        except: self.this = this
    def push_back(self, *args): return _py_scream_ee.RotamerV_push_back(self, *args)
    def front(self): return _py_scream_ee.RotamerV_front(self)
    def back(self): return _py_scream_ee.RotamerV_back(self)
    def assign(self, *args): return _py_scream_ee.RotamerV_assign(self, *args)
    def resize(self, *args): return _py_scream_ee.RotamerV_resize(self, *args)
    def insert(self, *args): return _py_scream_ee.RotamerV_insert(self, *args)
    def reserve(self, *args): return _py_scream_ee.RotamerV_reserve(self, *args)
    def capacity(self): return _py_scream_ee.RotamerV_capacity(self)
    __swig_destroy__ = _py_scream_ee.delete_RotamerV
    __del__ = lambda self : None;
RotamerV_swigregister = _py_scream_ee.RotamerV_swigregister
RotamerV_swigregister(RotamerV)

class pairds(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, pairds, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, pairds, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _py_scream_ee.new_pairds(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_setmethods__["first"] = _py_scream_ee.pairds_first_set
    __swig_getmethods__["first"] = _py_scream_ee.pairds_first_get
    if _newclass:first = _swig_property(_py_scream_ee.pairds_first_get, _py_scream_ee.pairds_first_set)
    __swig_setmethods__["second"] = _py_scream_ee.pairds_second_set
    __swig_getmethods__["second"] = _py_scream_ee.pairds_second_get
    if _newclass:second = _swig_property(_py_scream_ee.pairds_second_get, _py_scream_ee.pairds_second_set)
    def __len__(self): return 2
    def __repr__(self): return str((self.first, self.second))
    def __getitem__(self, index): 
      if not (index % 2): 
        return self.first
      else:
        return self.second
    def __setitem__(self, index, val):
      if not (index % 2): 
        self.first = val
      else:
        self.second = val
    __swig_destroy__ = _py_scream_ee.delete_pairds
    __del__ = lambda self : None;
pairds_swigregister = _py_scream_ee.pairds_swigregister
pairds_swigregister(pairds)

class MutInfoListPy(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MutInfoListPy, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MutInfoListPy, name)
    __repr__ = _swig_repr
    def iterator(self): return _py_scream_ee.MutInfoListPy_iterator(self)
    def __iter__(self): return self.iterator()
    def __nonzero__(self): return _py_scream_ee.MutInfoListPy___nonzero__(self)
    def __bool__(self): return _py_scream_ee.MutInfoListPy___bool__(self)
    def __len__(self): return _py_scream_ee.MutInfoListPy___len__(self)
    def pop(self): return _py_scream_ee.MutInfoListPy_pop(self)
    def __getslice__(self, *args): return _py_scream_ee.MutInfoListPy___getslice__(self, *args)
    def __setslice__(self, *args): return _py_scream_ee.MutInfoListPy___setslice__(self, *args)
    def __delslice__(self, *args): return _py_scream_ee.MutInfoListPy___delslice__(self, *args)
    def __delitem__(self, *args): return _py_scream_ee.MutInfoListPy___delitem__(self, *args)
    def __getitem__(self, *args): return _py_scream_ee.MutInfoListPy___getitem__(self, *args)
    def __setitem__(self, *args): return _py_scream_ee.MutInfoListPy___setitem__(self, *args)
    def append(self, *args): return _py_scream_ee.MutInfoListPy_append(self, *args)
    def empty(self): return _py_scream_ee.MutInfoListPy_empty(self)
    def size(self): return _py_scream_ee.MutInfoListPy_size(self)
    def clear(self): return _py_scream_ee.MutInfoListPy_clear(self)
    def swap(self, *args): return _py_scream_ee.MutInfoListPy_swap(self, *args)
    def get_allocator(self): return _py_scream_ee.MutInfoListPy_get_allocator(self)
    def begin(self): return _py_scream_ee.MutInfoListPy_begin(self)
    def end(self): return _py_scream_ee.MutInfoListPy_end(self)
    def rbegin(self): return _py_scream_ee.MutInfoListPy_rbegin(self)
    def rend(self): return _py_scream_ee.MutInfoListPy_rend(self)
    def pop_back(self): return _py_scream_ee.MutInfoListPy_pop_back(self)
    def erase(self, *args): return _py_scream_ee.MutInfoListPy_erase(self, *args)
    def __init__(self, *args): 
        this = _py_scream_ee.new_MutInfoListPy(*args)
        try: self.this.append(this)
        except: self.this = this
    def push_back(self, *args): return _py_scream_ee.MutInfoListPy_push_back(self, *args)
    def front(self): return _py_scream_ee.MutInfoListPy_front(self)
    def back(self): return _py_scream_ee.MutInfoListPy_back(self)
    def assign(self, *args): return _py_scream_ee.MutInfoListPy_assign(self, *args)
    def resize(self, *args): return _py_scream_ee.MutInfoListPy_resize(self, *args)
    def insert(self, *args): return _py_scream_ee.MutInfoListPy_insert(self, *args)
    def reserve(self, *args): return _py_scream_ee.MutInfoListPy_reserve(self, *args)
    def capacity(self): return _py_scream_ee.MutInfoListPy_capacity(self)
    __swig_destroy__ = _py_scream_ee.delete_MutInfoListPy
    __del__ = lambda self : None;
MutInfoListPy_swigregister = _py_scream_ee.MutInfoListPy_swigregister
MutInfoListPy_swigregister(MutInfoListPy)

class MutInfoPairListPy(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MutInfoPairListPy, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MutInfoPairListPy, name)
    __repr__ = _swig_repr
    def iterator(self): return _py_scream_ee.MutInfoPairListPy_iterator(self)
    def __iter__(self): return self.iterator()
    def __nonzero__(self): return _py_scream_ee.MutInfoPairListPy___nonzero__(self)
    def __bool__(self): return _py_scream_ee.MutInfoPairListPy___bool__(self)
    def __len__(self): return _py_scream_ee.MutInfoPairListPy___len__(self)
    def pop(self): return _py_scream_ee.MutInfoPairListPy_pop(self)
    def __getslice__(self, *args): return _py_scream_ee.MutInfoPairListPy___getslice__(self, *args)
    def __setslice__(self, *args): return _py_scream_ee.MutInfoPairListPy___setslice__(self, *args)
    def __delslice__(self, *args): return _py_scream_ee.MutInfoPairListPy___delslice__(self, *args)
    def __delitem__(self, *args): return _py_scream_ee.MutInfoPairListPy___delitem__(self, *args)
    def __getitem__(self, *args): return _py_scream_ee.MutInfoPairListPy___getitem__(self, *args)
    def __setitem__(self, *args): return _py_scream_ee.MutInfoPairListPy___setitem__(self, *args)
    def append(self, *args): return _py_scream_ee.MutInfoPairListPy_append(self, *args)
    def empty(self): return _py_scream_ee.MutInfoPairListPy_empty(self)
    def size(self): return _py_scream_ee.MutInfoPairListPy_size(self)
    def clear(self): return _py_scream_ee.MutInfoPairListPy_clear(self)
    def swap(self, *args): return _py_scream_ee.MutInfoPairListPy_swap(self, *args)
    def get_allocator(self): return _py_scream_ee.MutInfoPairListPy_get_allocator(self)
    def begin(self): return _py_scream_ee.MutInfoPairListPy_begin(self)
    def end(self): return _py_scream_ee.MutInfoPairListPy_end(self)
    def rbegin(self): return _py_scream_ee.MutInfoPairListPy_rbegin(self)
    def rend(self): return _py_scream_ee.MutInfoPairListPy_rend(self)
    def pop_back(self): return _py_scream_ee.MutInfoPairListPy_pop_back(self)
    def erase(self, *args): return _py_scream_ee.MutInfoPairListPy_erase(self, *args)
    def __init__(self, *args): 
        this = _py_scream_ee.new_MutInfoPairListPy(*args)
        try: self.this.append(this)
        except: self.this = this
    def push_back(self, *args): return _py_scream_ee.MutInfoPairListPy_push_back(self, *args)
    def front(self): return _py_scream_ee.MutInfoPairListPy_front(self)
    def back(self): return _py_scream_ee.MutInfoPairListPy_back(self)
    def assign(self, *args): return _py_scream_ee.MutInfoPairListPy_assign(self, *args)
    def resize(self, *args): return _py_scream_ee.MutInfoPairListPy_resize(self, *args)
    def insert(self, *args): return _py_scream_ee.MutInfoPairListPy_insert(self, *args)
    def reserve(self, *args): return _py_scream_ee.MutInfoPairListPy_reserve(self, *args)
    def capacity(self): return _py_scream_ee.MutInfoPairListPy_capacity(self)
    __swig_destroy__ = _py_scream_ee.delete_MutInfoPairListPy
    __del__ = lambda self : None;
MutInfoPairListPy_swigregister = _py_scream_ee.MutInfoPairListPy_swigregister
MutInfoPairListPy_swigregister(MutInfoPairListPy)


def derefString(*args):
  return _py_scream_ee.derefString(*args)
derefString = _py_scream_ee.derefString

def derefRotamer(*args):
  return _py_scream_ee.derefRotamer(*args)
derefRotamer = _py_scream_ee.derefRotamer

def derefAARotamer(*args):
  return _py_scream_ee.derefAARotamer(*args)
derefAARotamer = _py_scream_ee.derefAARotamer

def castRotamerToAARotamer(*args):
  return _py_scream_ee.castRotamerToAARotamer(*args)
castRotamerToAARotamer = _py_scream_ee.castRotamerToAARotamer


